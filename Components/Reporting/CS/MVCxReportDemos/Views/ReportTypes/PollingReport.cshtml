@model ReportsDemoModel
@section AdditionalResources {
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/RunDesignerButton.css")" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/ViewerSelector.css")" />
    <script type="text/javascript">
        function WebDocumentViewerInit(s, e) {
            var reportPreview = s.GetPreviewModel().reportPreview;
            reportPreview.customProcessBrickClick = function (pageIndex, brick) {
                if(brick) {
                    if(brick.text() === "Show Results") {
                        reportPreview.drillThrough("showResults");
                    } else if(brick.text() === "Start a new poll") {
                        reportPreview.drillThrough("startNewPoll");
                    }
                }
            }
            reportPreview.editingFieldChanged = function (field) {
                if(field.groupID()) {
                    reportPreview.editingFieldsProvider()
                        .forEach(function (item) {
                            if(item.id() === field.id() && item !== field) {
                                item.readOnly(field.editValue() !== DevExpress.Report.Preview.CheckState.Checked);
                            }
                        });
                }
            }
        }
    </script>
}

@section TopRightMenuRegion {
    @Html.Partial("ViewerSelectorPartial", Model.ReportID)
    @Html.Partial("ShowDesignerButtonPartial", Model.ReportID)
}

@if(Model.IsASPViewer) {
    @Html.Partial("PollingReportViewerPartial", Model)
}
else if(Model.IsHTML5Viewer) {
    @Html.DevExpress().WebDocumentViewer(settings => {
    settings.Name = "webDocumentViewer";
    settings.ClientSideEvents.Init = "WebDocumentViewerInit";
}).Bind(Model.Report).GetHtml()
}
else if(Model.IsMobileViewer) {
    @Html.Partial("MobileEmulator", Model.EmulatorModel)
}

@model SpreadsheetMultiplicationTableModel
<script type="text/javascript">
    function UpdatePreview() {
        var WidthValue = Width.GetValue();
        var HeightValue = Height.GetValue();
        var UseSharedFormulaValue = UseSharedFormula.GetChecked();
        var CreateInfoCellsValue = CreateInfoCells.GetChecked();

        var params = "Width=" + encodeURIComponent(WidthValue) +
                    "&Height=" + encodeURIComponent(HeightValue) +
                    "&UseSharedFormula=" + encodeURIComponent(UseSharedFormulaValue) +
                    "&CreateInfoCells=" + encodeURIComponent(CreateInfoCellsValue);
        SpreadsheetPreview.Update(params);
    }
</script>

@using (Html.BeginForm("MultiplicationTableExportTo", "Spreadsheet", FormMethod.Post)) {
    <table class="OptionsTable">
        <tr>
            <td>
                @Html.DevExpress().Label(
                            settings => {
                                settings.Text = "Width: ";
                                settings.EncodeHtml = false;
                                settings.AssociatedControlName = "Width";
                            }).GetHtml()
            </td>
            <td style="width: 100%">
                @Html.DevExpress().SpinEditFor(model => model.Width,
                            settings => {
                                settings.Name = "Width";
                                settings.Properties.MinValue = 1;
                                settings.Properties.MaxValue = 20;
                                settings.Height = Unit.Pixel(19);
                                settings.Width = Unit.Pixel(80);
                                settings.Properties.NumberType = SpinEditNumberType.Integer;
                                settings.Properties.ClientSideEvents.ValueChanged = "function(s,e) { UpdatePreview(); }";
                            }
                ).GetHtml()
            </td>
            <td rowspan="3" style="vertical-align: bottom;">
                @Html.Partial("SpreadsheetDocumentDownloaderPartial")
            </td>
        </tr>
        <tr>
            <td>
                @Html.DevExpress().Label(
                            settings => {
                                settings.Text = "Height: ";
                                settings.EncodeHtml = false;
                                settings.AssociatedControlName = "Height";
                            }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().SpinEditFor(model => model.Height,
                            settings => {
                                settings.Name = "Height";
                                settings.Properties.MinValue = 1;
                                settings.Properties.MaxValue = 20;
                                settings.Height = Unit.Pixel(19);
                                settings.Width = Unit.Pixel(80);
                                settings.Properties.NumberType = SpinEditNumberType.Integer;
                                settings.Properties.ClientSideEvents.ValueChanged = "function(s,e) { UpdatePreview(); }";
                            }
                ).GetHtml()
            </td>
        </tr>
        <tr>
            <td>
                @Html.DevExpress().CheckBoxFor(model => model.CreateInfoCells,
                            settings => {
                                settings.Name = "CreateInfoCells";
                                settings.Width = Unit.Pixel(119);
                                settings.Text = "Create Info Cells";
                                settings.Properties.ClientSideEvents.ValueChanged = "function(s,e) { UpdatePreview(); }";
                            }
                ).GetHtml()
            </td>
            <td>
                @Html.DevExpress().CheckBoxFor(model => model.CreateInfoCells,
                            settings => {
                                settings.Name = "UseSharedFormula";
                                settings.Text = "Use Shared Formula";
                                settings.Properties.ClientSideEvents.ValueChanged = "function(s,e) { UpdatePreview(); }";
                            }
                ).GetHtml()
            </td>
        </tr>
    </table>
    <br />
    @Html.Partial("SpreadsheetPreviewPartial", Model.PreviewModel)    
}
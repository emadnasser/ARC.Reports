@model SpreadsheetXLExportApiModel

<script type="text/javascript">
    function OnExampleTreeListFocusedNodeChanged(s, e) {
        var key = exampleTreeList.GetFocusedNodeKey();
        $.ajax({
            url: '@Url.Action("XLExportApiChangeCurrentSourceCode", "Spreadsheet")',
            data: { SourceId: key },
            success: OnXLExportApiChangeCurrentSourceCode,
        });
    }
    OnXLExportApiChangeCurrentSourceCode = function (responseData) {
        $('#SourceId').val(responseData.SourceId);
        $("#CSharpCodeHolder").html(responseData.CSCode);
        $("#lblSourceName").html(responseData.SourceName);
        ExportToXLS.SetEnabled(responseData.IsXLSButtonEnabled);
        ExportToCSV.SetEnabled(responseData.IsCSVButtonEnabled);
    }
</script>

@using (Html.BeginForm("XLExportApiExportTo", "Spreadsheet", FormMethod.Post)) {
    @Html.Hidden("SourceId", 0);
    <table>
        <tr>
            <td style="width: 100%;">
                <span id="lblSourceName" style="font-size: x-large;">@(Model.SourceName)</span>
            </td>
            <td>
                @Html.DevExpress().Button(
                    settings => {
                        settings.Name = "ExportToXLSX";
                        settings.Text = "Export to XLSX";
                        settings.Style.Add(HtmlTextWriterStyle.MarginRight, "9px");
                        settings.UseSubmitBehavior = true;
                    }
                ).GetHtml()
            </td>
            <td>
                @Html.DevExpress().Button(
                        settings => {
                            settings.Name = "ExportToXLS";
                            settings.Text = "Export to XLS";
                            settings.Style.Add(HtmlTextWriterStyle.MarginRight, "9px");
                            settings.EnableClientSideAPI = true;
                            settings.UseSubmitBehavior = true;
                        }
                    ).GetHtml()
            </td>
            <td>
                @Html.DevExpress().Button(
                        settings => {
                            settings.Name = "ExportToCSV";
                            settings.Text = "Export to CSV";
                            settings.EnableClientSideAPI = true;
                            settings.UseSubmitBehavior = true;
                        }
                    ).GetHtml()
            </td>
        </tr>
    </table>
    <div style="border: 1px Solid rgb(224, 224, 224);">
    </div>
    <table id="mainTable" style="width: 100%;">
        <tr>
            <td style="vertical-align: top; width: 100%">
                <div style="overflow: auto; height: 550px;">
                    <div id="CSharpCodeHolder">@Html.Raw(@Model.CSCode)</div>
                </div>
            </td>
            <td>
                <div id="treeListContainer" style="height: 550px; overflow: scroll; width: 225px; padding: 0; margin: 0;">
                    @Html.Partial("ApiExampleTreeListPartial", Model.SourceCodeTreeModel)
                </div>
            </td>
        </tr>
    </table>
}


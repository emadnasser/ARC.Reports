@model UnitConversionDistanceAndSquareModel
<script type="text/javascript">
    // <![CDATA[
    function SubmitConversionDistanceAndSquare(activeEditorId) {
        if (document.unitConversionLock)
            return;
        $('#TPDistanceAndSquareContainer>#DistanceGroupEditorId').val(activeEditorId);
        $('#TPDistanceAndSquareContainer>#submitButton').trigger('submit');
    }
    // ]]>
</script>

@Html.HiddenFor(model => model.DistanceGroupEditorId, new { id = "DistanceGroupEditorId" })
@Html.DevExpress().Label(
                settings => {
                    settings.Name = "ASPxLabel6";
                    settings.Text = "DISTANCE AND SQUARE";
                    settings.ControlStyle.Font.Size = FontUnit.Parse("30px");
                }).GetHtml()
<table class="UnitConversionLayoutTable">
    <tr>
        <td>
            @Html.DevExpress().SpinEditFor(model => model.Kilometer,
                settings => {
                    settings.Name = "Kilometer";
                    settings.Width = Unit.Pixel(113);
                    settings.TabIndex = 1;
                    settings.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                    settings.Properties.ClientSideEvents.NumberChanged = String.Format("function(s,e) {{ SubmitConversionDistanceAndSquare('{0}'); }}", DistanceGroupEditorId.Kilometer);
                }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().Label(
                settings => {
                    settings.Name = "ASPxLabel7";
                    settings.Text = "Kilometer";
                }).GetHtml()
        </td>
        <td class="UnitConversionAlignedColumn">
            @Html.DevExpress().SpinEditFor(model => model.Meter,
                settings => {
                    settings.Name = "Meter";
                    settings.Width = Unit.Pixel(113);
                    settings.TabIndex = 4;
                    settings.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                    settings.Properties.ClientSideEvents.NumberChanged = String.Format("function(s,e) {{ SubmitConversionDistanceAndSquare('{0}'); }}", DistanceGroupEditorId.Meter);
                }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().Label(
                settings => {
                    settings.Name = "ASPxLabel9";
                    settings.Text = "Meter";
                }).GetHtml()
        </td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().SpinEditFor(model => model.StatuteMile,
                settings => {
                    settings.Name = "StatuteMile";
                    settings.Width = Unit.Pixel(113);
                    settings.TabIndex = 2;
                    settings.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                    settings.Properties.ClientSideEvents.NumberChanged = String.Format("function(s,e) {{ SubmitConversionDistanceAndSquare('{0}'); }}", DistanceGroupEditorId.StatuteMile);
                }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().Label(
                settings => {
                    settings.Name = "ASPxLabel8";
                    settings.Text = "Statute mile";
                }).GetHtml()
        </td>
        <td class="UnitConversionAlignedColumn">
            @Html.DevExpress().SpinEditFor(model => model.MeterToFoot,
                settings => {
                    settings.Name = "MeterToFoot";
                    settings.Width = Unit.Pixel(113);
                    settings.TabIndex = 5;
                    settings.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                    settings.Properties.ClientSideEvents.NumberChanged = String.Format("function(s,e) {{ SubmitConversionDistanceAndSquare('{0}'); }}", DistanceGroupEditorId.MeterToFoot);
                }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().Label(
                settings => {
                    settings.Name = "ASPxLabel10";
                    settings.Text = "Foot";
                }).GetHtml()
        </td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().SpinEditFor(model => model.NauticalMile,
                settings => {
                    settings.Name = "NauticalMile";
                    settings.Width = Unit.Pixel(113);
                    settings.TabIndex = 3;
                    settings.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                    settings.Properties.ClientSideEvents.NumberChanged = String.Format("function(s,e) {{ SubmitConversionDistanceAndSquare('{0}'); }}", DistanceGroupEditorId.NauticalMile);
                }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().Label(
                settings => {
                    settings.Name = "ASPxLabel11";
                    settings.Text = "Nautical mile";
                }).GetHtml()
        </td>
        <td class="UnitConversionAlignedColumn">
            @Html.DevExpress().SpinEditFor(model => model.Yard,
                settings => {
                    settings.Name = "Yard";
                    settings.Width = Unit.Pixel(113);
                    settings.TabIndex = 6;
                    settings.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                    settings.Properties.ClientSideEvents.NumberChanged = String.Format("function(s,e) {{ SubmitConversionDistanceAndSquare('{0}'); }}", DistanceGroupEditorId.Yard);
                }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().Label(
                settings => {
                    settings.Name = "ASPxLabel12";
                    settings.Text = "Yard";
                }).GetHtml()
        </td>
    </tr>
    <tr>
        <td colspan="4" style="height: 40px"></td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().SpinEditFor(model => model.Centimeter,
                settings => {
                    settings.Name = "Centimeter";
                    settings.Width = Unit.Pixel(113);
                    settings.TabIndex = 7;
                    settings.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                    settings.Properties.ClientSideEvents.NumberChanged = String.Format("function(s,e) {{ SubmitConversionDistanceAndSquare('{0}'); }}", DistanceGroupEditorId.Centimeter);
                }).GetHtml()
        </td>
        <td>
             @Html.DevExpress().Label(
                settings => {
                    settings.Name = "ASPxLabel13";
                    settings.Text = "Centimeter";
                }).GetHtml()
        </td>
        <td class="UnitConversionAlignedColumn">
            @Html.DevExpress().SpinEditFor(model => model.SquareMeter,
                settings => {
                    settings.Name = "SquareMeter";
                    settings.Width = Unit.Pixel(113);
                    settings.TabIndex = 10;
                    settings.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                    settings.Properties.ClientSideEvents.NumberChanged = String.Format("function(s,e) {{ SubmitConversionDistanceAndSquare('{0}'); }}", DistanceGroupEditorId.SquareMeter);
                }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().Label(
                settings => {
                    settings.Name = "ASPxLabel14";
                    settings.Text = "Square meter";
                }).GetHtml()
        </td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().SpinEditFor(model => model.Inch,
                settings => {
                    settings.Name = "Inch";
                    settings.Width = Unit.Pixel(113);
                    settings.TabIndex = 8;
                    settings.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                    settings.Properties.ClientSideEvents.NumberChanged = String.Format("function(s,e) {{ SubmitConversionDistanceAndSquare('{0}'); }}", DistanceGroupEditorId.Inch);
                }).GetHtml()
            </td>
        <td>
            @Html.DevExpress().Label(
                settings => {
                    settings.Name = "ASPxLabel15";
                    settings.Text = "Inch";
                }).GetHtml()
        </td>
        <td class="UnitConversionAlignedColumn">
            @Html.DevExpress().SpinEditFor(model => model.SquareFeet,
                settings => {
                    settings.Name = "SquareFeet";
                    settings.Width = Unit.Pixel(113);
                    settings.TabIndex = 11;
                    settings.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                    settings.Properties.ClientSideEvents.NumberChanged = String.Format("function(s,e) {{ SubmitConversionDistanceAndSquare('{0}'); }}", DistanceGroupEditorId.SquareFeet);
                }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().Label(
                settings => {
                    settings.Name = "ASPxLabel16";
                    settings.Text = "Square feet";
                }).GetHtml()
        </td>
    </tr>
    <tr>
        <td>
            @Html.DevExpress().SpinEditFor(model => model.CentimeterToFoot,
                settings => {
                    settings.Name = "CentimeterToFoot";
                    settings.Width = Unit.Pixel(113);
                    settings.TabIndex = 9;
                    settings.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                    settings.Properties.ClientSideEvents.NumberChanged = String.Format("function(s,e) {{ SubmitConversionDistanceAndSquare('{0}'); }}", DistanceGroupEditorId.CentimeterToFoot);
                }).GetHtml()
        </td>
        <td>
            @Html.DevExpress().Label(
                settings => {
                    settings.Name = "ASPxLabel17";
                    settings.Text = "Foot";
                }).GetHtml()
        </td>
        <td></td>
        <td></td>
    </tr>
</table>
<button id="submitButton1" type="submit" style="display: none;"></button>
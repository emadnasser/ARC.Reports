<script type="text/javascript">
    // <![CDATA[

    function AddFileToContainer(callbackData) {
        var data = callbackData.split('|');
        var file = data[0];
        var url = data[1];
        $("<a></a>")
            .attr("target", "_blank")
            .attr("href", url)
            .text(file)
            .click(function (evt) {
                return DXDemo.ShowScreenshotWindow(evt, this);
            })
            .appendTo($("#fileContainer"));
        $("<br />").appendTo($("#fileContainer"));
        if (!fileList)
            fileList = [];
        fileList.push(url);
    }
    function ClearFileContainer() {
        $("#fileContainer").empty();
        fileList = null;
        btnCompress.SetEnabled(false)
    }
    // ]]> 
</script>

@using (Html.BeginForm("Compress", "Compression", FormMethod.Post, new { @style = "width:100%;", @class = "compress" })) {
    @Html.DevExpress().UploadControl(
        settings => {
            settings.Name = "uploader";
            settings.CallbackRouteValues = new { Controller = "Compression", Action = "CompressUploadFiles" };
            settings.ControlStyle.CssClass = "editorArea";

            settings.Width = Unit.Pixel(380);
            settings.AdvancedModeSettings.EnableMultiSelect = true;
            settings.NullText = "Select files to compress...";

            settings.ValidationSettings.AllowedFileExtensions = new string[] { ".jpg", ".jpeg", ".jpe", ".gif", ".png", ".rtf", ".txt", ".doc", ".docx" }; ;
            settings.ValidationSettings.MaxFileSize = 1048576;

            settings.ClientSideEvents.FilesUploadStart = "function(s,e) { ClearFileContainer(); Uploader_OnFileUploadStart(); }";
            settings.ClientSideEvents.FileUploadComplete = "function(s,e) { if(e.callbackData != '') AddFileToContainer(e.callbackData); }";
            settings.ClientSideEvents.FilesUploadComplete = "function(s,e) { Uploader_OnFilesUploadComplete(e); btnCompress.SetEnabled(true); }";
            settings.ClientSideEvents.UploadingProgressChanged = "function(s, e) { Uploader_ProgressChanged(e); }";
            settings.ClientSideEvents.TextChanged = "function(s, e) { UpdateUploadButton(); }";
        }).GetHtml()

    <div class="buttons">
        @Html.DevExpress().Button(
            settings => {
                settings.Name = "btnUpload";
                settings.Text = "Upload";
                settings.ClientEnabled = false;
                settings.Style.Add("margin-left", "120px");
                settings.UseSubmitBehavior = false;
                settings.ClientSideEvents.Click = "function(s,e) { uploader.Upload(); }";
            }).GetHtml()
    </div>

    <label>&nbsp;</label>
    <div class="editorArea text">
        Allowed image types: jpg, jpeg, jpe, gif, rtf, txt, doc, docx<br />
        Maximum file size: 4Mb
    </div>
    <fieldset>
        <legend>Uploaded Files</legend>
        <div id="fileContainer" class="fileContainer"></div>
    </fieldset>
    <p class="Note">
        <b>Note</b>: All files uploaded to this demo will be automatically deleted in 5 minutes.
    </p>
}
@Html.Partial("CompressPartial")

@Html.DevExpress().Button(settings => {
    settings.Name = "btnCompress";
    settings.Text = "Compress";
    settings.ClientEnabled = false;
    settings.UseSubmitBehavior = false;
    settings.ClientSideEvents.Click = String.Format("function (s, e) {{ document.location.href = '{0}'; }}", Url.Action("CompressDownloadArchive", "Compression"));
}).GetHtml()
@model RichEditExportModel
@section AdditionalResources
{
    <style type="text/css">
        .OptionsTable > tbody > tr > td
        {
            height: 45px;
        }       
    </style>
}

<script type="text/javascript">
    function Uploader_TextChanged() {
        uploader.Upload();
    }
    function Uploader_FileUploadComplete(s, e) {
        if (e.callbackData == "" || e.callbackData == null)
            return;
        var data = eval(e.callbackData);
        $('#DocumentUrl').val(data.Url);
        CurrentDocumentName.SetText(data.FileName);
    }
</script>
<div class="Separator SingleSeparator"></div>
@using (Html.BeginForm("ExportExportTo", "RichEdit", FormMethod.Post)) {
    @Html.HiddenFor(model => model.DocumentUrl)
    <table class="OptionsTable" style="width: 100%;">
        <tr>
            <td>
                @Html.DevExpress().Label(
                    settings => {
                        settings.Text = "Upload";
                        settings.Style.Add(HtmlTextWriterStyle.FontSize, "30px");
                        settings.Style.Add(HtmlTextWriterStyle.Color, "#ff8800");
                    }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().Label(
                    settings => {
                        settings.Text = "Export";
                        settings.Style.Add(HtmlTextWriterStyle.FontSize, "30px");
                        settings.Style.Add(HtmlTextWriterStyle.Color, "#ff8800");
                    }).GetHtml()
            </td>
        </tr>
        <tr>
            <td style="width: 50%; vertical-align: top;">
                <table class="OptionsTable">
                    <tr>
                        <td class="note">
                            @Html.DevExpress().Label(
                                settings => {
                                    settings.Text = "Maximum file size: 1Mb. Files accepted: rtf, doc, docx, txt, mht, odt, xml, epub.";
                                }).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.DevExpress().UploadControl(
                                settings => {
                                    settings.Name = "uploader";
                                    settings.CallbackRouteValues = new { Controller = "RichEdit", Action = "ExportDocumentUpload" };
                                    settings.ControlStyle.CssClass = "editorArea";
                                    settings.ShowProgressPanel = true;
                                    settings.NullText = "Click here to browse files...";
                                    settings.UploadMode = UploadControlUploadMode.Advanced;
                                    settings.ValidationSettings.AllowedFileExtensions = new string[] { ".rtf", ".doc", ".docx", ".txt", ".mht", ".odt", ".xml", ".epub" }; ;
                                    settings.ValidationSettings.MaxFileSize = 1048576;
                                    settings.ClientSideEvents.TextChanged = "function(s, e) { Uploader_TextChanged();  } ";
                                    settings.ClientSideEvents.FileUploadComplete = "function(s,e) { Uploader_FileUploadComplete(s, e); }";
                                }).GetHtml()
                        </td>
                    </tr>
                </table>
            </td>
            <td style="width: 50%;">
                <table class="OptionsTable">
                    <tr>
                        <td>
                            @Html.DevExpress().Label(
                                settings => {
                                    settings.Text = "Source file: ";
                                    settings.AssociatedControlName = "CurrentDocumentName";
                                }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().Label(
                                settings => {
                                    settings.Name = "CurrentDocumentName";
                                    settings.Text = Path.GetFileName(Model.DocumentUrl);
                                    settings.Properties.EnableClientSideAPI = true;
                                }).GetHtml()
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            @Html.Partial("RichEditDocumentDownloaderPartial")
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
    <div class="Separator SingleSeparator" style="width: 100%; height: 1px;"></div>
}


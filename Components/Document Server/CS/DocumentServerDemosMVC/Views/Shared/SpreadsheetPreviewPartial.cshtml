@model SpreadsheetPreviewModel

@if (Model.CanShowOnlyFirstWorksheet) { 
    <iframe id="previewFrame0" src='@Model.PreviewDocumentAction' class="PreviewBorderedContent" style="width: 100%;
                    height: 400px;"></iframe>
}
else { 
    @Html.DevExpress().PageControl(
         settings => {
             settings.Name = "spreadsheetPreviewPage";
             settings.ActiveTabIndex = 0;
             settings.Width = Unit.Percentage(100);
             settings.Styles.Content.Paddings.Assign(new Paddings(Unit.Pixel(1)));
             for (int i = 0; i < Model.Workbook.Worksheets.Count; i++) {
                 Worksheet sheet = Model.Workbook.Worksheets[i];
                 string pageName = String.Format("previewFrame{0}", i);
                 string previewPath = String.Format("{0}?{1}.PreviewSheetIndex={2}", Model.PreviewDocumentAction, Model.OwnerPropertyName, i);
                 settings.TabPages.Add(sheet.Name, pageName).SetContent(
                     () => {
                         ViewContext.Writer.Write(String.Format(@"<div style='background-color:white;'><iframe id=""{0}"" style='width: 100%; height: 500px; border-style:none;' src=""{1}""> </iframe></div>", pageName, previewPath));
                     }
                 );
             }
         }
    ).GetHtml()
}

<script type="text/javascript">
    SpreadsheetPreview = {
        sheetCount: @Model.Workbook.Worksheets.Count,
        basePath: '@Model.PreviewDocumentAction',
        Update: function (param) {
            for(var i = 0; i < this.sheetCount; i++) {
                var iframeElementName = "previewFrame" + i.toString();
                var iframeElement = document.getElementById(iframeElementName);
                if (!iframeElement)
                    continue;
                var additionalParams = "&" + new Date().valueOf();
                if (param)
                    additionalParams = param;
                iframeElement.src = this.basePath + "?" + additionalParams;
            }
        }
    };
</script>


@Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "GridView";
        settings.CallbackRouteValues = new { Controller = "Filtering", Action = "DateRangeHeaderFilterPartial", HeaderFilterMode = HeaderFilterMode };
        settings.Width = Unit.Percentage(100);

        settings.Columns.Add("Patient");
        settings.Columns.Add("Doctor");
        settings.Columns.Add("Clinic");
        settings.Columns.Add(column => {
            column.FieldName = "VisitDate";
            column.Width = Unit.Pixel(200);
            column.Settings.AllowHeaderFilter = DefaultBoolean.True;
            column.PropertiesEdit.DisplayFormatString = "d";
            column.SettingsHeaderFilter.Mode = HeaderFilterMode;
        });
        
        settings.SettingsPopup.HeaderFilter.Height = Unit.Pixel(440);
        settings.SettingsPopup.HeaderFilter.Width = GetHeaderFilterPopupWidth();

        settings.FormatConditions.AddHighlight("VisitDate", "[VisitDate] < LocalDateTimeToday()", GridConditionHighlightFormat.LightRedFillWithDarkRedText);
        settings.FormatConditions.AddHighlight("VisitDate", "[VisitDate] > LocalDateTimeToday()", GridConditionHighlightFormat.GreenFillWithDarkGreenText);
    }).Bind(Model).GetHtml()

@functions {
    static string[] WideThemes = new string[] { "iOS", "Material", "Metropolis", "MetropolisBlue", "Moderno", "Mulberry", "SoftOrange" };

    GridHeaderFilterMode HeaderFilterMode { get { return ViewBag.HeaderFilterMode; } }
    
    int GetHeaderFilterPopupWidth() {
        return HeaderFilterMode == GridHeaderFilterMode.DateRangeCalendar && WideThemes.Contains(Utils.CurrentTheme) ? 360 : 300;
    }
}
@model IEnumerable<EditableProduct>

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

@Html.DevExpress().GridView(
    settings => {
        settings.Name = "gridView";
        settings.KeyFieldName = "ProductID";
        settings.Width = Unit.Percentage(100);
        settings.CallbackRouteValues = new { Controller = "Editing", Action = "BatchEditingPartial" };
        settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "Editing", Action = "BatchEditingUpdateModel" };
        
        settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
        settings.SettingsEditing.BatchEditSettings.EditMode = BatchEditingDemoHelper.Options.EditMode;
        settings.SettingsEditing.BatchEditSettings.StartEditAction = BatchEditingDemoHelper.Options.StartEditAction;
        settings.SettingsEditing.BatchEditSettings.HighlightDeletedRows = BatchEditingDemoHelper.Options.HighlightDeletedRows;
        
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.Width = Unit.Point(50);

        settings.Columns.Add("ProductName");
        settings.Columns.Add(column => {
            column.FieldName = "CategoryID";
            column.Caption = "Category";
            column.EditorProperties().ComboBox(p => {
                p.TextField = "CategoryName";
                p.ValueField = "CategoryID";
                p.ValueType = typeof(int);
                p.DataSource = NorthwindDataProvider.GetCategories();
            });
        });
        settings.Columns.Add("QuantityPerUnit");
        settings.Columns.Add(column => {
            column.FieldName = "UnitPrice";
            column.EditorProperties().SpinEdit(p => {
                p.DisplayFormatString = "c";
                p.DisplayFormatInEditMode = true;
                p.MinValue = 0;
                p.MaxValue = 1000000;
            });
        });
        settings.Columns.Add(column => {
            column.FieldName = "UnitsInStock";
            column.EditorProperties().SpinEdit(p => {
                p.NumberType = SpinEditNumberType.Integer;
                p.MinValue = 0;
                p.MaxValue = 10000;
            });
        });
        settings.Columns.Add("Discontinued", MVCxGridViewColumnType.CheckBox);
        settings.CellEditorInitialize = (s, e) => {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.None;
        };
        settings.ClientSideEvents.BeginCallback = "OnBeginGridCallback";
    }).Bind(Model).GetHtml()
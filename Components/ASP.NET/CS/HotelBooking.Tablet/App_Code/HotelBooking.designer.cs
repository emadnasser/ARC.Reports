#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelBooking
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HotelBooking")]
	public partial class HotelBookingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertFeatures_List(Features_List instance);
    partial void UpdateFeatures_List(Features_List instance);
    partial void DeleteFeatures_List(Features_List instance);
    partial void InsertGuest(Guest instance);
    partial void UpdateGuest(Guest instance);
    partial void DeleteGuest(Guest instance);
    partial void InsertHotel_Feature(Hotel_Feature instance);
    partial void UpdateHotel_Feature(Hotel_Feature instance);
    partial void DeleteHotel_Feature(Hotel_Feature instance);
    partial void InsertHotel_Image(Hotel_Image instance);
    partial void UpdateHotel_Image(Hotel_Image instance);
    partial void DeleteHotel_Image(Hotel_Image instance);
    partial void InsertHotel(Hotel instance);
    partial void UpdateHotel(Hotel instance);
    partial void DeleteHotel(Hotel instance);
    partial void InsertPicture(Picture instance);
    partial void UpdatePicture(Picture instance);
    partial void DeletePicture(Picture instance);
    partial void InsertReservation(Reservation instance);
    partial void UpdateReservation(Reservation instance);
    partial void DeleteReservation(Reservation instance);
    partial void InsertReview(Review instance);
    partial void UpdateReview(Review instance);
    partial void DeleteReview(Review instance);
    partial void InsertRoom_Feature(Room_Feature instance);
    partial void UpdateRoom_Feature(Room_Feature instance);
    partial void DeleteRoom_Feature(Room_Feature instance);
    partial void InsertRoom_Type(Room_Type instance);
    partial void UpdateRoom_Type(Room_Type instance);
    partial void DeleteRoom_Type(Room_Type instance);
    partial void InsertMetro_Area(Metro_Area instance);
    partial void UpdateMetro_Area(Metro_Area instance);
    partial void DeleteMetro_Area(Metro_Area instance);
    #endregion
		
		public HotelBookingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelBookingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelBookingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelBookingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<Features_List> Features_Lists
		{
			get
			{
				return this.GetTable<Features_List>();
			}
		}
		
		public System.Data.Linq.Table<Guest> Guests
		{
			get
			{
				return this.GetTable<Guest>();
			}
		}
		
		public System.Data.Linq.Table<Hotel_Feature> Hotel_Features
		{
			get
			{
				return this.GetTable<Hotel_Feature>();
			}
		}
		
		public System.Data.Linq.Table<Hotel_Image> Hotel_Images
		{
			get
			{
				return this.GetTable<Hotel_Image>();
			}
		}
		
		public System.Data.Linq.Table<Hotel> Hotels
		{
			get
			{
				return this.GetTable<Hotel>();
			}
		}
		
		public System.Data.Linq.Table<Picture> Pictures
		{
			get
			{
				return this.GetTable<Picture>();
			}
		}
		
		public System.Data.Linq.Table<Reservation> Reservations
		{
			get
			{
				return this.GetTable<Reservation>();
			}
		}
		
		public System.Data.Linq.Table<Review> Reviews
		{
			get
			{
				return this.GetTable<Review>();
			}
		}
		
		public System.Data.Linq.Table<Room_Feature> Room_Features
		{
			get
			{
				return this.GetTable<Room_Feature>();
			}
		}
		
		public System.Data.Linq.Table<Room_Type> Room_Types
		{
			get
			{
				return this.GetTable<Room_Type>();
			}
		}
		
		public System.Data.Linq.Table<Metro_Area> Metro_Areas
		{
			get
			{
				return this.GetTable<Metro_Area>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cities")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _City_Name;
		
		private string _State_Province;
		
		private string _Country;
		
		private string _Offer;
		
		private string _City_Image;
		
		private System.Nullable<int> _Metro_Area_ID;
		
		private EntitySet<Hotel> _Hotels;
		
		private EntityRef<Metro_Area> _Metro_Area;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCity_NameChanging(string value);
    partial void OnCity_NameChanged();
    partial void OnState_ProvinceChanging(string value);
    partial void OnState_ProvinceChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnOfferChanging(string value);
    partial void OnOfferChanged();
    partial void OnCity_ImageChanging(string value);
    partial void OnCity_ImageChanged();
    partial void OnMetro_Area_IDChanging(System.Nullable<int> value);
    partial void OnMetro_Area_IDChanged();
    #endregion
		
		public City()
		{
			this._Hotels = new EntitySet<Hotel>(new Action<Hotel>(this.attach_Hotels), new Action<Hotel>(this.detach_Hotels));
			this._Metro_Area = default(EntityRef<Metro_Area>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_Name", DbType="NVarChar(MAX)")]
		public string City_Name
		{
			get
			{
				return this._City_Name;
			}
			set
			{
				if ((this._City_Name != value))
				{
					this.OnCity_NameChanging(value);
					this.SendPropertyChanging();
					this._City_Name = value;
					this.SendPropertyChanged("City_Name");
					this.OnCity_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Province", DbType="NVarChar(50)")]
		public string State_Province
		{
			get
			{
				return this._State_Province;
			}
			set
			{
				if ((this._State_Province != value))
				{
					this.OnState_ProvinceChanging(value);
					this.SendPropertyChanging();
					this._State_Province = value;
					this.SendPropertyChanged("State_Province");
					this.OnState_ProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(MAX)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Offer", DbType="NVarChar(MAX)")]
		public string Offer
		{
			get
			{
				return this._Offer;
			}
			set
			{
				if ((this._Offer != value))
				{
					this.OnOfferChanging(value);
					this.SendPropertyChanging();
					this._Offer = value;
					this.SendPropertyChanged("Offer");
					this.OnOfferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_Image", DbType="NVarChar(50)")]
		public string City_Image
		{
			get
			{
				return this._City_Image;
			}
			set
			{
				if ((this._City_Image != value))
				{
					this.OnCity_ImageChanging(value);
					this.SendPropertyChanging();
					this._City_Image = value;
					this.SendPropertyChanged("City_Image");
					this.OnCity_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metro_Area_ID", DbType="Int")]
		public System.Nullable<int> Metro_Area_ID
		{
			get
			{
				return this._Metro_Area_ID;
			}
			set
			{
				if ((this._Metro_Area_ID != value))
				{
					if (this._Metro_Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMetro_Area_IDChanging(value);
					this.SendPropertyChanging();
					this._Metro_Area_ID = value;
					this.SendPropertyChanged("Metro_Area_ID");
					this.OnMetro_Area_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Hotel", Storage="_Hotels", ThisKey="ID", OtherKey="City_ID")]
		public EntitySet<Hotel> Hotels
		{
			get
			{
				return this._Hotels;
			}
			set
			{
				this._Hotels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Metro_Area_City", Storage="_Metro_Area", ThisKey="Metro_Area_ID", OtherKey="ID", IsForeignKey=true)]
		public Metro_Area Metro_Area
		{
			get
			{
				return this._Metro_Area.Entity;
			}
			set
			{
				Metro_Area previousValue = this._Metro_Area.Entity;
				if (((previousValue != value) 
							|| (this._Metro_Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Metro_Area.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._Metro_Area.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._Metro_Area_ID = value.ID;
					}
					else
					{
						this._Metro_Area_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Metro_Area");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hotels(Hotel entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Hotels(Hotel entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rooms")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Hotel_ID;
		
		private System.Nullable<int> _Room_Type_ID;
		
		private string _Room_Short_Description;
		
		private System.Nullable<decimal> _Nighly_Rate;
		
		private string _Room_Image1;
		
		private string _Room_Image2;
		
		private string _Room_Image3;
		
		private string _Room_Image4;
		
		private string _Room_image5;
		
		private EntitySet<Picture> _Pictures;
		
		private EntitySet<Reservation> _Reservations;
		
		private EntitySet<Room_Feature> _Room_Features;
		
		private EntityRef<Hotel> _Hotel;
		
		private EntityRef<Room_Type> _Room_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHotel_IDChanging(System.Nullable<int> value);
    partial void OnHotel_IDChanged();
    partial void OnRoom_Type_IDChanging(System.Nullable<int> value);
    partial void OnRoom_Type_IDChanged();
    partial void OnRoom_Short_DescriptionChanging(string value);
    partial void OnRoom_Short_DescriptionChanged();
    partial void OnNighly_RateChanging(System.Nullable<decimal> value);
    partial void OnNighly_RateChanged();
    partial void OnRoom_Image1Changing(string value);
    partial void OnRoom_Image1Changed();
    partial void OnRoom_Image2Changing(string value);
    partial void OnRoom_Image2Changed();
    partial void OnRoom_Image3Changing(string value);
    partial void OnRoom_Image3Changed();
    partial void OnRoom_Image4Changing(string value);
    partial void OnRoom_Image4Changed();
    partial void OnRoom_image5Changing(string value);
    partial void OnRoom_image5Changed();
    #endregion
		
		public Room()
		{
			this._Pictures = new EntitySet<Picture>(new Action<Picture>(this.attach_Pictures), new Action<Picture>(this.detach_Pictures));
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			this._Room_Features = new EntitySet<Room_Feature>(new Action<Room_Feature>(this.attach_Room_Features), new Action<Room_Feature>(this.detach_Room_Features));
			this._Hotel = default(EntityRef<Hotel>);
			this._Room_Type = default(EntityRef<Room_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hotel_ID", DbType="Int")]
		public System.Nullable<int> Hotel_ID
		{
			get
			{
				return this._Hotel_ID;
			}
			set
			{
				if ((this._Hotel_ID != value))
				{
					if (this._Hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotel_IDChanging(value);
					this.SendPropertyChanging();
					this._Hotel_ID = value;
					this.SendPropertyChanged("Hotel_ID");
					this.OnHotel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Room_Type", Storage="_Room_Type_ID", DbType="Int")]
		public System.Nullable<int> Room_Type_ID
		{
			get
			{
				return this._Room_Type_ID;
			}
			set
			{
				if ((this._Room_Type_ID != value))
				{
					this.OnRoom_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Room_Type_ID = value;
					this.SendPropertyChanged("Room_Type_ID");
					this.OnRoom_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_Short_Description", DbType="NVarChar(MAX)")]
		public string Room_Short_Description
		{
			get
			{
				return this._Room_Short_Description;
			}
			set
			{
				if ((this._Room_Short_Description != value))
				{
					this.OnRoom_Short_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Room_Short_Description = value;
					this.SendPropertyChanged("Room_Short_Description");
					this.OnRoom_Short_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nighly_Rate", DbType="Money")]
		public System.Nullable<decimal> Nighly_Rate
		{
			get
			{
				return this._Nighly_Rate;
			}
			set
			{
				if ((this._Nighly_Rate != value))
				{
					this.OnNighly_RateChanging(value);
					this.SendPropertyChanging();
					this._Nighly_Rate = value;
					this.SendPropertyChanged("Nighly_Rate");
					this.OnNighly_RateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_Image1", DbType="NVarChar(50)")]
		public string Room_Image1
		{
			get
			{
				return this._Room_Image1;
			}
			set
			{
				if ((this._Room_Image1 != value))
				{
					this.OnRoom_Image1Changing(value);
					this.SendPropertyChanging();
					this._Room_Image1 = value;
					this.SendPropertyChanged("Room_Image1");
					this.OnRoom_Image1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_Image2", DbType="NVarChar(50)")]
		public string Room_Image2
		{
			get
			{
				return this._Room_Image2;
			}
			set
			{
				if ((this._Room_Image2 != value))
				{
					this.OnRoom_Image2Changing(value);
					this.SendPropertyChanging();
					this._Room_Image2 = value;
					this.SendPropertyChanged("Room_Image2");
					this.OnRoom_Image2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_Image3", DbType="NVarChar(50)")]
		public string Room_Image3
		{
			get
			{
				return this._Room_Image3;
			}
			set
			{
				if ((this._Room_Image3 != value))
				{
					this.OnRoom_Image3Changing(value);
					this.SendPropertyChanging();
					this._Room_Image3 = value;
					this.SendPropertyChanged("Room_Image3");
					this.OnRoom_Image3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_Image4", DbType="NVarChar(50)")]
		public string Room_Image4
		{
			get
			{
				return this._Room_Image4;
			}
			set
			{
				if ((this._Room_Image4 != value))
				{
					this.OnRoom_Image4Changing(value);
					this.SendPropertyChanging();
					this._Room_Image4 = value;
					this.SendPropertyChanged("Room_Image4");
					this.OnRoom_Image4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_image5", DbType="NVarChar(50)")]
		public string Room_image5
		{
			get
			{
				return this._Room_image5;
			}
			set
			{
				if ((this._Room_image5 != value))
				{
					this.OnRoom_image5Changing(value);
					this.SendPropertyChanging();
					this._Room_image5 = value;
					this.SendPropertyChanged("Room_image5");
					this.OnRoom_image5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Picture", Storage="_Pictures", ThisKey="ID", OtherKey="Room_ID")]
		public EntitySet<Picture> Pictures
		{
			get
			{
				return this._Pictures;
			}
			set
			{
				this._Pictures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Reservation", Storage="_Reservations", ThisKey="ID", OtherKey="Room_ID")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Room_Feature", Storage="_Room_Features", ThisKey="ID", OtherKey="Room_ID")]
		public EntitySet<Room_Feature> Room_Features
		{
			get
			{
				return this._Room_Features;
			}
			set
			{
				this._Room_Features.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Room", Storage="_Hotel", ThisKey="Hotel_ID", OtherKey="ID", IsForeignKey=true)]
		public Hotel Hotel
		{
			get
			{
				return this._Hotel.Entity;
			}
			set
			{
				Hotel previousValue = this._Hotel.Entity;
				if (((previousValue != value) 
							|| (this._Hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotel.Entity = null;
						previousValue.Rooms.Remove(this);
					}
					this._Hotel.Entity = value;
					if ((value != null))
					{
						value.Rooms.Add(this);
						this._Hotel_ID = value.ID;
					}
					else
					{
						this._Hotel_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hotel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Type_Room", Storage="_Room_Type", ThisKey="Room_Type_ID", OtherKey="ID", IsForeignKey=true)]
		public Room_Type Room_Type
		{
			get
			{
				return this._Room_Type.Entity;
			}
			set
			{
				Room_Type previousValue = this._Room_Type.Entity;
				if (((previousValue != value) 
							|| (this._Room_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room_Type.Entity = null;
						previousValue.Rooms.Remove(this);
					}
					this._Room_Type.Entity = value;
					if ((value != null))
					{
						value.Rooms.Add(this);
						this._Room_Type_ID = value.ID;
					}
					else
					{
						this._Room_Type_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Room_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pictures(Picture entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_Pictures(Picture entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
		
		private void attach_Room_Features(Room_Feature entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_Room_Features(Room_Feature entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Features_List")]
	public partial class Features_List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Feature_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFeature_NameChanging(string value);
    partial void OnFeature_NameChanged();
    #endregion
		
		public Features_List()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature_Name", DbType="NVarChar(MAX)")]
		public string Feature_Name
		{
			get
			{
				return this._Feature_Name;
			}
			set
			{
				if ((this._Feature_Name != value))
				{
					this.OnFeature_NameChanging(value);
					this.SendPropertyChanging();
					this._Feature_Name = value;
					this.SendPropertyChanged("Feature_Name");
					this.OnFeature_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Guests")]
	public partial class Guest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private string _Title;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private string _Postal_Code;
		
		private string _Country;
		
		private string _Phone_Number;
		
		private string _Email;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPostal_CodeChanging(string value);
    partial void OnPostal_CodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPhone_NumberChanging(string value);
    partial void OnPhone_NumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Guest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="NVarChar(255)")]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="NVarChar(255)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(255)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Code", DbType="NVarChar(255)")]
		public string Postal_Code
		{
			get
			{
				return this._Postal_Code;
			}
			set
			{
				if ((this._Postal_Code != value))
				{
					this.OnPostal_CodeChanging(value);
					this.SendPropertyChanging();
					this._Postal_Code = value;
					this.SendPropertyChanged("Postal_Code");
					this.OnPostal_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(255)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Number", DbType="NVarChar(255)")]
		public string Phone_Number
		{
			get
			{
				return this._Phone_Number;
			}
			set
			{
				if ((this._Phone_Number != value))
				{
					this.OnPhone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Phone_Number = value;
					this.SendPropertyChanged("Phone_Number");
					this.OnPhone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hotel_Features")]
	public partial class Hotel_Feature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Hotel_ID;
		
		private string _Description;
		
		private EntityRef<Hotel> _Hotel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHotel_IDChanging(System.Nullable<int> value);
    partial void OnHotel_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Hotel_Feature()
		{
			this._Hotel = default(EntityRef<Hotel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hotel_ID", DbType="Int")]
		public System.Nullable<int> Hotel_ID
		{
			get
			{
				return this._Hotel_ID;
			}
			set
			{
				if ((this._Hotel_ID != value))
				{
					if (this._Hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotel_IDChanging(value);
					this.SendPropertyChanging();
					this._Hotel_ID = value;
					this.SendPropertyChanged("Hotel_ID");
					this.OnHotel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Hotel_Feature", Storage="_Hotel", ThisKey="Hotel_ID", OtherKey="ID", IsForeignKey=true)]
		public Hotel Hotel
		{
			get
			{
				return this._Hotel.Entity;
			}
			set
			{
				Hotel previousValue = this._Hotel.Entity;
				if (((previousValue != value) 
							|| (this._Hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotel.Entity = null;
						previousValue.Hotel_Features.Remove(this);
					}
					this._Hotel.Entity = value;
					if ((value != null))
					{
						value.Hotel_Features.Add(this);
						this._Hotel_ID = value.ID;
					}
					else
					{
						this._Hotel_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hotel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hotel_Images")]
	public partial class Hotel_Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Hotel_ID;
		
		private string _Image_Id;
		
		private EntityRef<Hotel> _Hotel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHotel_IDChanging(System.Nullable<int> value);
    partial void OnHotel_IDChanged();
    partial void OnImage_IdChanging(string value);
    partial void OnImage_IdChanged();
    #endregion
		
		public Hotel_Image()
		{
			this._Hotel = default(EntityRef<Hotel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hotel_ID", DbType="Int")]
		public System.Nullable<int> Hotel_ID
		{
			get
			{
				return this._Hotel_ID;
			}
			set
			{
				if ((this._Hotel_ID != value))
				{
					if (this._Hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotel_IDChanging(value);
					this.SendPropertyChanging();
					this._Hotel_ID = value;
					this.SendPropertyChanged("Hotel_ID");
					this.OnHotel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image_Id", DbType="NVarChar(100)")]
		public string Image_Id
		{
			get
			{
				return this._Image_Id;
			}
			set
			{
				if ((this._Image_Id != value))
				{
					this.OnImage_IdChanging(value);
					this.SendPropertyChanging();
					this._Image_Id = value;
					this.SendPropertyChanged("Image_Id");
					this.OnImage_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Hotel_Image", Storage="_Hotel", ThisKey="Hotel_ID", OtherKey="ID", IsForeignKey=true)]
		public Hotel Hotel
		{
			get
			{
				return this._Hotel.Entity;
			}
			set
			{
				Hotel previousValue = this._Hotel.Entity;
				if (((previousValue != value) 
							|| (this._Hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotel.Entity = null;
						previousValue.Hotel_Images.Remove(this);
					}
					this._Hotel.Entity = value;
					if ((value != null))
					{
						value.Hotel_Images.Add(this);
						this._Hotel_ID = value.ID;
					}
					else
					{
						this._Hotel_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hotel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hotels")]
	public partial class Hotel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Hotel_Name;
		
		private string _Description;
		
		private string _Hotel_Class;
		
		private System.Nullable<int> _Room_Count;
		
		private string _Location_Rating;
		
		private System.Nullable<double> _Avg_Customer_Rating;
		
		private System.Nullable<double> _Our_Rating;
		
		private string _Address;
		
		private System.Nullable<int> _City_ID;
		
		private string _Postal_Code;
		
		private string _Phone;
		
		private string _Website;
		
		private string _Metro_Area;
		
		private EntitySet<Room> _Rooms;
		
		private EntitySet<Hotel_Feature> _Hotel_Features;
		
		private EntitySet<Hotel_Image> _Hotel_Images;
		
		private EntitySet<Picture> _Pictures;
		
		private EntitySet<Review> _Reviews;
		
		private EntityRef<City> _City1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHotel_NameChanging(string value);
    partial void OnHotel_NameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnHotel_ClassChanging(string value);
    partial void OnHotel_ClassChanged();
    partial void OnRoom_CountChanging(System.Nullable<int> value);
    partial void OnRoom_CountChanged();
    partial void OnLocation_RatingChanging(string value);
    partial void OnLocation_RatingChanged();
    partial void OnAvg_Customer_RatingChanging(System.Nullable<double> value);
    partial void OnAvg_Customer_RatingChanged();
    partial void OnOur_RatingChanging(System.Nullable<double> value);
    partial void OnOur_RatingChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCity_IDChanging(System.Nullable<int> value);
    partial void OnCity_IDChanged();
    partial void OnPostal_CodeChanging(string value);
    partial void OnPostal_CodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnMetro_AreaChanging(string value);
    partial void OnMetro_AreaChanged();
    #endregion
		
		public Hotel()
		{
			this._Rooms = new EntitySet<Room>(new Action<Room>(this.attach_Rooms), new Action<Room>(this.detach_Rooms));
			this._Hotel_Features = new EntitySet<Hotel_Feature>(new Action<Hotel_Feature>(this.attach_Hotel_Features), new Action<Hotel_Feature>(this.detach_Hotel_Features));
			this._Hotel_Images = new EntitySet<Hotel_Image>(new Action<Hotel_Image>(this.attach_Hotel_Images), new Action<Hotel_Image>(this.detach_Hotel_Images));
			this._Pictures = new EntitySet<Picture>(new Action<Picture>(this.attach_Pictures), new Action<Picture>(this.detach_Pictures));
			this._Reviews = new EntitySet<Review>(new Action<Review>(this.attach_Reviews), new Action<Review>(this.detach_Reviews));
			this._City1 = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hotel_Name", DbType="NVarChar(255)")]
		public string Hotel_Name
		{
			get
			{
				return this._Hotel_Name;
			}
			set
			{
				if ((this._Hotel_Name != value))
				{
					this.OnHotel_NameChanging(value);
					this.SendPropertyChanging();
					this._Hotel_Name = value;
					this.SendPropertyChanged("Hotel_Name");
					this.OnHotel_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hotel_Class", DbType="NVarChar(10)")]
		public string Hotel_Class
		{
			get
			{
				return this._Hotel_Class;
			}
			set
			{
				if ((this._Hotel_Class != value))
				{
					this.OnHotel_ClassChanging(value);
					this.SendPropertyChanging();
					this._Hotel_Class = value;
					this.SendPropertyChanged("Hotel_Class");
					this.OnHotel_ClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_Count", DbType="Int")]
		public System.Nullable<int> Room_Count
		{
			get
			{
				return this._Room_Count;
			}
			set
			{
				if ((this._Room_Count != value))
				{
					this.OnRoom_CountChanging(value);
					this.SendPropertyChanging();
					this._Room_Count = value;
					this.SendPropertyChanged("Room_Count");
					this.OnRoom_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_Rating", DbType="NChar(10)")]
		public string Location_Rating
		{
			get
			{
				return this._Location_Rating;
			}
			set
			{
				if ((this._Location_Rating != value))
				{
					this.OnLocation_RatingChanging(value);
					this.SendPropertyChanging();
					this._Location_Rating = value;
					this.SendPropertyChanged("Location_Rating");
					this.OnLocation_RatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avg_Customer_Rating", DbType="Float")]
		public System.Nullable<double> Avg_Customer_Rating
		{
			get
			{
				return this._Avg_Customer_Rating;
			}
			set
			{
				if ((this._Avg_Customer_Rating != value))
				{
					this.OnAvg_Customer_RatingChanging(value);
					this.SendPropertyChanging();
					this._Avg_Customer_Rating = value;
					this.SendPropertyChanged("Avg_Customer_Rating");
					this.OnAvg_Customer_RatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Our_Rating", DbType="Float")]
		public System.Nullable<double> Our_Rating
		{
			get
			{
				return this._Our_Rating;
			}
			set
			{
				if ((this._Our_Rating != value))
				{
					this.OnOur_RatingChanging(value);
					this.SendPropertyChanging();
					this._Our_Rating = value;
					this.SendPropertyChanged("Our_Rating");
					this.OnOur_RatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_ID", DbType="Int")]
		public System.Nullable<int> City_ID
		{
			get
			{
				return this._City_ID;
			}
			set
			{
				if ((this._City_ID != value))
				{
					if (this._City1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCity_IDChanging(value);
					this.SendPropertyChanging();
					this._City_ID = value;
					this.SendPropertyChanged("City_ID");
					this.OnCity_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Code", DbType="NVarChar(25)")]
		public string Postal_Code
		{
			get
			{
				return this._Postal_Code;
			}
			set
			{
				if ((this._Postal_Code != value))
				{
					this.OnPostal_CodeChanging(value);
					this.SendPropertyChanging();
					this._Postal_Code = value;
					this.SendPropertyChanged("Postal_Code");
					this.OnPostal_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(100)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metro_Area", DbType="NVarChar(255)")]
		public string Metro_Area
		{
			get
			{
				return this._Metro_Area;
			}
			set
			{
				if ((this._Metro_Area != value))
				{
					this.OnMetro_AreaChanging(value);
					this.SendPropertyChanging();
					this._Metro_Area = value;
					this.SendPropertyChanged("Metro_Area");
					this.OnMetro_AreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Room", Storage="_Rooms", ThisKey="ID", OtherKey="Hotel_ID")]
		public EntitySet<Room> Rooms
		{
			get
			{
				return this._Rooms;
			}
			set
			{
				this._Rooms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Hotel_Feature", Storage="_Hotel_Features", ThisKey="ID", OtherKey="Hotel_ID")]
		public EntitySet<Hotel_Feature> Hotel_Features
		{
			get
			{
				return this._Hotel_Features;
			}
			set
			{
				this._Hotel_Features.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Hotel_Image", Storage="_Hotel_Images", ThisKey="ID", OtherKey="Hotel_ID")]
		public EntitySet<Hotel_Image> Hotel_Images
		{
			get
			{
				return this._Hotel_Images;
			}
			set
			{
				this._Hotel_Images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Picture", Storage="_Pictures", ThisKey="ID", OtherKey="Hotel_ID")]
		public EntitySet<Picture> Pictures
		{
			get
			{
				return this._Pictures;
			}
			set
			{
				this._Pictures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Review", Storage="_Reviews", ThisKey="ID", OtherKey="Hotel_ID")]
		public EntitySet<Review> Reviews
		{
			get
			{
				return this._Reviews;
			}
			set
			{
				this._Reviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Hotel", Storage="_City1", ThisKey="City_ID", OtherKey="ID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City1.Entity;
			}
			set
			{
				City previousValue = this._City1.Entity;
				if (((previousValue != value) 
							|| (this._City1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City1.Entity = null;
						previousValue.Hotels.Remove(this);
					}
					this._City1.Entity = value;
					if ((value != null))
					{
						value.Hotels.Add(this);
						this._City_ID = value.ID;
					}
					else
					{
						this._City_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = this;
		}
		
		private void detach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = null;
		}
		
		private void attach_Hotel_Features(Hotel_Feature entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = this;
		}
		
		private void detach_Hotel_Features(Hotel_Feature entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = null;
		}
		
		private void attach_Hotel_Images(Hotel_Image entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = this;
		}
		
		private void detach_Hotel_Images(Hotel_Image entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = null;
		}
		
		private void attach_Pictures(Picture entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = this;
		}
		
		private void detach_Pictures(Picture entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = null;
		}
		
		private void attach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = this;
		}
		
		private void detach_Reviews(Review entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pictures")]
	public partial class Picture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Picture_Id;
		
		private System.Nullable<int> _Hotel_ID;
		
		private System.Nullable<int> _Room_ID;
		
		private EntityRef<Hotel> _Hotel;
		
		private EntityRef<Room> _Room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPicture_IdChanging(string value);
    partial void OnPicture_IdChanged();
    partial void OnHotel_IDChanging(System.Nullable<int> value);
    partial void OnHotel_IDChanged();
    partial void OnRoom_IDChanging(System.Nullable<int> value);
    partial void OnRoom_IDChanged();
    #endregion
		
		public Picture()
		{
			this._Hotel = default(EntityRef<Hotel>);
			this._Room = default(EntityRef<Room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture_Id", DbType="NVarChar(50)")]
		public string Picture_Id
		{
			get
			{
				return this._Picture_Id;
			}
			set
			{
				if ((this._Picture_Id != value))
				{
					this.OnPicture_IdChanging(value);
					this.SendPropertyChanging();
					this._Picture_Id = value;
					this.SendPropertyChanged("Picture_Id");
					this.OnPicture_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hotel_ID", DbType="Int")]
		public System.Nullable<int> Hotel_ID
		{
			get
			{
				return this._Hotel_ID;
			}
			set
			{
				if ((this._Hotel_ID != value))
				{
					if (this._Hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotel_IDChanging(value);
					this.SendPropertyChanging();
					this._Hotel_ID = value;
					this.SendPropertyChanged("Hotel_ID");
					this.OnHotel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_ID", DbType="Int")]
		public System.Nullable<int> Room_ID
		{
			get
			{
				return this._Room_ID;
			}
			set
			{
				if ((this._Room_ID != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoom_IDChanging(value);
					this.SendPropertyChanging();
					this._Room_ID = value;
					this.SendPropertyChanged("Room_ID");
					this.OnRoom_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Picture", Storage="_Hotel", ThisKey="Hotel_ID", OtherKey="ID", IsForeignKey=true)]
		public Hotel Hotel
		{
			get
			{
				return this._Hotel.Entity;
			}
			set
			{
				Hotel previousValue = this._Hotel.Entity;
				if (((previousValue != value) 
							|| (this._Hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotel.Entity = null;
						previousValue.Pictures.Remove(this);
					}
					this._Hotel.Entity = value;
					if ((value != null))
					{
						value.Pictures.Add(this);
						this._Hotel_ID = value.ID;
					}
					else
					{
						this._Hotel_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hotel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Picture", Storage="_Room", ThisKey="Room_ID", OtherKey="ID", IsForeignKey=true)]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.Pictures.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.Pictures.Add(this);
						this._Room_ID = value.ID;
					}
					else
					{
						this._Room_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reservations")]
	public partial class Reservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Room_ID;
		
		private System.Nullable<System.DateTime> _Check_In;
		
		private System.Nullable<System.DateTime> _Check_Out;
		
		private System.Nullable<decimal> _Amount_Due;
		
		private System.Nullable<decimal> _Amount_Paid;
		
		private System.Nullable<int> _Reservation_Satus;
		
		private System.Nullable<int> _Number_Of_Adults;
		
		private System.Nullable<int> _Number_Of_Children;
		
		private string _Special_Requests;
		
		private EntityRef<Room> _Room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoom_IDChanging(System.Nullable<int> value);
    partial void OnRoom_IDChanged();
    partial void OnCheck_InChanging(System.Nullable<System.DateTime> value);
    partial void OnCheck_InChanged();
    partial void OnCheck_OutChanging(System.Nullable<System.DateTime> value);
    partial void OnCheck_OutChanged();
    partial void OnAmount_DueChanging(System.Nullable<decimal> value);
    partial void OnAmount_DueChanged();
    partial void OnAmount_PaidChanging(System.Nullable<decimal> value);
    partial void OnAmount_PaidChanged();
    partial void OnReservation_SatusChanging(System.Nullable<int> value);
    partial void OnReservation_SatusChanged();
    partial void OnNumber_Of_AdultsChanging(System.Nullable<int> value);
    partial void OnNumber_Of_AdultsChanged();
    partial void OnNumber_Of_ChildrenChanging(System.Nullable<int> value);
    partial void OnNumber_Of_ChildrenChanged();
    partial void OnSpecial_RequestsChanging(string value);
    partial void OnSpecial_RequestsChanged();
    #endregion
		
		public Reservation()
		{
			this._Room = default(EntityRef<Room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_ID", DbType="Int")]
		public System.Nullable<int> Room_ID
		{
			get
			{
				return this._Room_ID;
			}
			set
			{
				if ((this._Room_ID != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoom_IDChanging(value);
					this.SendPropertyChanging();
					this._Room_ID = value;
					this.SendPropertyChanged("Room_ID");
					this.OnRoom_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Check_In", DbType="DateTime")]
		public System.Nullable<System.DateTime> Check_In
		{
			get
			{
				return this._Check_In;
			}
			set
			{
				if ((this._Check_In != value))
				{
					this.OnCheck_InChanging(value);
					this.SendPropertyChanging();
					this._Check_In = value;
					this.SendPropertyChanged("Check_In");
					this.OnCheck_InChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Check_Out", DbType="DateTime")]
		public System.Nullable<System.DateTime> Check_Out
		{
			get
			{
				return this._Check_Out;
			}
			set
			{
				if ((this._Check_Out != value))
				{
					this.OnCheck_OutChanging(value);
					this.SendPropertyChanging();
					this._Check_Out = value;
					this.SendPropertyChanged("Check_Out");
					this.OnCheck_OutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount_Due", DbType="Money")]
		public System.Nullable<decimal> Amount_Due
		{
			get
			{
				return this._Amount_Due;
			}
			set
			{
				if ((this._Amount_Due != value))
				{
					this.OnAmount_DueChanging(value);
					this.SendPropertyChanging();
					this._Amount_Due = value;
					this.SendPropertyChanged("Amount_Due");
					this.OnAmount_DueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount_Paid", DbType="Money")]
		public System.Nullable<decimal> Amount_Paid
		{
			get
			{
				return this._Amount_Paid;
			}
			set
			{
				if ((this._Amount_Paid != value))
				{
					this.OnAmount_PaidChanging(value);
					this.SendPropertyChanging();
					this._Amount_Paid = value;
					this.SendPropertyChanged("Amount_Paid");
					this.OnAmount_PaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reservation_Satus", DbType="Int")]
		public System.Nullable<int> Reservation_Satus
		{
			get
			{
				return this._Reservation_Satus;
			}
			set
			{
				if ((this._Reservation_Satus != value))
				{
					this.OnReservation_SatusChanging(value);
					this.SendPropertyChanging();
					this._Reservation_Satus = value;
					this.SendPropertyChanged("Reservation_Satus");
					this.OnReservation_SatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number_Of_Adults", DbType="Int")]
		public System.Nullable<int> Number_Of_Adults
		{
			get
			{
				return this._Number_Of_Adults;
			}
			set
			{
				if ((this._Number_Of_Adults != value))
				{
					this.OnNumber_Of_AdultsChanging(value);
					this.SendPropertyChanging();
					this._Number_Of_Adults = value;
					this.SendPropertyChanged("Number_Of_Adults");
					this.OnNumber_Of_AdultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number_Of_Children", DbType="Int")]
		public System.Nullable<int> Number_Of_Children
		{
			get
			{
				return this._Number_Of_Children;
			}
			set
			{
				if ((this._Number_Of_Children != value))
				{
					this.OnNumber_Of_ChildrenChanging(value);
					this.SendPropertyChanging();
					this._Number_Of_Children = value;
					this.SendPropertyChanged("Number_Of_Children");
					this.OnNumber_Of_ChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Special_Requests", DbType="NVarChar(MAX)")]
		public string Special_Requests
		{
			get
			{
				return this._Special_Requests;
			}
			set
			{
				if ((this._Special_Requests != value))
				{
					this.OnSpecial_RequestsChanging(value);
					this.SendPropertyChanging();
					this._Special_Requests = value;
					this.SendPropertyChanged("Special_Requests");
					this.OnSpecial_RequestsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Reservation", Storage="_Room", ThisKey="Room_ID", OtherKey="ID", IsForeignKey=true)]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._Room_ID = value.ID;
					}
					else
					{
						this._Room_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reviews")]
	public partial class Review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Hotel_ID;
		
		private string _Review_Text;
		
		private System.Nullable<System.DateTime> _Posted_On;
		
		private System.Nullable<double> _Rating;
		
		private string _Reviewer_Name;
		
		private EntityRef<Hotel> _Hotel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHotel_IDChanging(System.Nullable<int> value);
    partial void OnHotel_IDChanged();
    partial void OnReview_TextChanging(string value);
    partial void OnReview_TextChanged();
    partial void OnPosted_OnChanging(System.Nullable<System.DateTime> value);
    partial void OnPosted_OnChanged();
    partial void OnRatingChanging(System.Nullable<double> value);
    partial void OnRatingChanged();
    partial void OnReviewer_NameChanging(string value);
    partial void OnReviewer_NameChanged();
    #endregion
		
		public Review()
		{
			this._Hotel = default(EntityRef<Hotel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hotel_ID", DbType="Int")]
		public System.Nullable<int> Hotel_ID
		{
			get
			{
				return this._Hotel_ID;
			}
			set
			{
				if ((this._Hotel_ID != value))
				{
					if (this._Hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotel_IDChanging(value);
					this.SendPropertyChanging();
					this._Hotel_ID = value;
					this.SendPropertyChanged("Hotel_ID");
					this.OnHotel_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Review_Text", DbType="NVarChar(MAX)")]
		public string Review_Text
		{
			get
			{
				return this._Review_Text;
			}
			set
			{
				if ((this._Review_Text != value))
				{
					this.OnReview_TextChanging(value);
					this.SendPropertyChanging();
					this._Review_Text = value;
					this.SendPropertyChanged("Review_Text");
					this.OnReview_TextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Posted_On", DbType="DateTime")]
		public System.Nullable<System.DateTime> Posted_On
		{
			get
			{
				return this._Posted_On;
			}
			set
			{
				if ((this._Posted_On != value))
				{
					this.OnPosted_OnChanging(value);
					this.SendPropertyChanging();
					this._Posted_On = value;
					this.SendPropertyChanged("Posted_On");
					this.OnPosted_OnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Float")]
		public System.Nullable<double> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reviewer_Name", DbType="NVarChar(255)")]
		public string Reviewer_Name
		{
			get
			{
				return this._Reviewer_Name;
			}
			set
			{
				if ((this._Reviewer_Name != value))
				{
					this.OnReviewer_NameChanging(value);
					this.SendPropertyChanging();
					this._Reviewer_Name = value;
					this.SendPropertyChanged("Reviewer_Name");
					this.OnReviewer_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_Review", Storage="_Hotel", ThisKey="Hotel_ID", OtherKey="ID", IsForeignKey=true)]
		public Hotel Hotel
		{
			get
			{
				return this._Hotel.Entity;
			}
			set
			{
				Hotel previousValue = this._Hotel.Entity;
				if (((previousValue != value) 
							|| (this._Hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotel.Entity = null;
						previousValue.Reviews.Remove(this);
					}
					this._Hotel.Entity = value;
					if ((value != null))
					{
						value.Reviews.Add(this);
						this._Hotel_ID = value.ID;
					}
					else
					{
						this._Hotel_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hotel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room_Features")]
	public partial class Room_Feature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Room_ID;
		
		private string _Description;
		
		private string _Feature_Image;
		
		private EntityRef<Room> _Room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoom_IDChanging(System.Nullable<int> value);
    partial void OnRoom_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFeature_ImageChanging(string value);
    partial void OnFeature_ImageChanged();
    #endregion
		
		public Room_Feature()
		{
			this._Room = default(EntityRef<Room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_ID", DbType="Int")]
		public System.Nullable<int> Room_ID
		{
			get
			{
				return this._Room_ID;
			}
			set
			{
				if ((this._Room_ID != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoom_IDChanging(value);
					this.SendPropertyChanging();
					this._Room_ID = value;
					this.SendPropertyChanged("Room_ID");
					this.OnRoom_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature_Image", DbType="NVarChar(MAX)")]
		public string Feature_Image
		{
			get
			{
				return this._Feature_Image;
			}
			set
			{
				if ((this._Feature_Image != value))
				{
					this.OnFeature_ImageChanging(value);
					this.SendPropertyChanging();
					this._Feature_Image = value;
					this.SendPropertyChanged("Feature_Image");
					this.OnFeature_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Room_Feature", Storage="_Room", ThisKey="Room_ID", OtherKey="ID", IsForeignKey=true)]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.Room_Features.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.Room_Features.Add(this);
						this._Room_ID = value.ID;
					}
					else
					{
						this._Room_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room_Types")]
	public partial class Room_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type_Name;
		
		private EntitySet<Room> _Rooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnType_NameChanging(string value);
    partial void OnType_NameChanged();
    #endregion
		
		public Room_Type()
		{
			this._Rooms = new EntitySet<Room>(new Action<Room>(this.attach_Rooms), new Action<Room>(this.detach_Rooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Name", DbType="NVarChar(255)")]
		public string Type_Name
		{
			get
			{
				return this._Type_Name;
			}
			set
			{
				if ((this._Type_Name != value))
				{
					this.OnType_NameChanging(value);
					this.SendPropertyChanging();
					this._Type_Name = value;
					this.SendPropertyChanged("Type_Name");
					this.OnType_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Type_Room", Storage="_Rooms", ThisKey="ID", OtherKey="Room_Type_ID")]
		public EntitySet<Room> Rooms
		{
			get
			{
				return this._Rooms;
			}
			set
			{
				this._Rooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Room_Type = this;
		}
		
		private void detach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Room_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Metro_Areas")]
	public partial class Metro_Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Area_Name;
		
		private string _Map_Image;
		
		private string _Country;
		
		private string _City;
		
		private EntitySet<City> _Cities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnArea_NameChanging(string value);
    partial void OnArea_NameChanged();
    partial void OnMap_ImageChanging(string value);
    partial void OnMap_ImageChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    #endregion
		
		public Metro_Area()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area_Name", DbType="NVarChar(MAX)")]
		public string Area_Name
		{
			get
			{
				return this._Area_Name;
			}
			set
			{
				if ((this._Area_Name != value))
				{
					this.OnArea_NameChanging(value);
					this.SendPropertyChanging();
					this._Area_Name = value;
					this.SendPropertyChanged("Area_Name");
					this.OnArea_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Map_Image", DbType="NVarChar(MAX)")]
		public string Map_Image
		{
			get
			{
				return this._Map_Image;
			}
			set
			{
				if ((this._Map_Image != value))
				{
					this.OnMap_ImageChanging(value);
					this.SendPropertyChanging();
					this._Map_Image = value;
					this.SendPropertyChanged("Map_Image");
					this.OnMap_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(MAX)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Metro_Area_City", Storage="_Cities", ThisKey="ID", OtherKey="Metro_Area_ID")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Metro_Area = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Metro_Area = null;
		}
	}
}
#pragma warning restore 1591

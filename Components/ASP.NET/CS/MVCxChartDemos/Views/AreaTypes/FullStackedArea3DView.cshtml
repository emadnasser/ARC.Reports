@model IList

@using (Html.BeginForm()) {
    ChartAreaFullStcked3DDemoOptions options = (ChartAreaFullStcked3DDemoOptions)ViewData[ChartDemoHelper.OptionsKey];
    <div class="chartOptionsPanel" style="height:auto; font-size:12px;">
        <table style="width: 100%;">
            <tr>
                <td style="width: 100%;">
                    @Html.CheckBox("showLabels", options.ShowLabels)
                    <label class="checkBox" for="showLabels">Show Labels</label>
                </td>
                <td class="NoWrap"><label for="transparency">Transparency</label></td>
                <td><div class="Spacer" style="width: 5px;"></div></td>
                <td>
                    @Html.DropDownList("transparency", ChartDemoHelper.GetTransparency("135"), new { style = "vertical-align: -2px; margin-left: 8px;" })
                </td>
                <td><div class="Spacer" style="width: 10px;"></div></td>
                <td class="NoWrap"><label for="perspectiveAngle">Perspective Angle</label></td>
                <td><div class="Spacer" style="width: 5px;"></div></td>
                <td>
                    @Html.DropDownList("perspectiveAngle", ChartDemoHelper.GetPerspectiveAngle())
                </td>
                <td><div class="Spacer" style="width: 10px;"></div></td>
                <td class="NoWrap"><label for="zoomPercent">Zoom Percent</label></td>
                <td><div class="Spacer" style="width: 5px;"></div></td>
                <td>
                    @Html.DropDownList("zoomPercent", ChartDemoHelper.GetZoomPercent())
                </td>
                <td><div class="Spacer" style="width:14px;"></div></td>
                <td><input style="float: right;" type="submit" value="Apply" /></td>
            </tr>
        </table>
    </div>
    
    @Html.DevExpress().Chart(settings => {
        settings.Name = "chart";
        settings.Width = 920;
        settings.Height = 500;
        settings.BorderOptions.Visibility = DefaultBoolean.False;   
        settings.CrosshairEnabled = options.ShowLabels ? DefaultBoolean.False : DefaultBoolean.True;

        settings.Legends.Default(l => {
            l.AlignmentHorizontal = LegendAlignmentHorizontal.Center;
            l.AlignmentVertical = LegendAlignmentVertical.BottomOutside;
            l.Direction = LegendDirection.RightToLeft;
            l.Border.Visibility = DefaultBoolean.False;
        });
    
        settings.Titles.Add(new ChartTitle() {
            Text = "Market Share Over Time"
        }); 

        settings.Series.Template(t => {
            t.Views().FullStackedArea3DSeriesView(v => {
                v.Transparency = options.Transparency;
                v.SeriesLabel(l => {
                    l.TextPattern = "{VP:P0}";
                    l.ResolveOverlappingMode = ResolveOverlappingMode.Default;
                });
            });
            t.LabelsVisibility = options.ShowLabels ? DefaultBoolean.True : DefaultBoolean.False;
            t.SetDataMembers("Year", "Sales");
        });

        settings.XYDiagram3D(d => {
            d.RotationType = RotationType.UseAngles;
            d.RotationOrder = RotationOrder.XYZ;
            d.VerticalScrollPercent = 4;
            d.PerspectiveAngle = options.PerspectiveAngle;
            d.ZoomPercent = options.ZoomPercent;
            
            d.AxisX.WholeRange.SideMarginsValue = 0;
            
            d.AxisY.WholeRange.SetMinMaxValues(0, 1);
            d.AxisY.WholeRange.SideMarginsValue = 0;
            d.AxisY.Label.TextPattern = "{V:P0}";
            d.AxisY.Interlaced = true;
        });
    }).Bind(Model, seriesDataMember: "Company").GetHtml()
}
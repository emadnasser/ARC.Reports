@model IList

@using (Html.BeginForm()) {
    ChartRadarDemoOptions options = (ChartRadarDemoOptions)ViewData[ChartDemoHelper.OptionsKey];
    
    <div class="chartOptionsPanel" style="height:auto; font-size:12px;">
        <table style="width: 100%;">
            <tr>
                <td>
                    @Html.CheckBox("showLabels", options.ShowLabels)
                </td>
                <td class="NoWrap">
                    <label for="showLabels" style="width:auto">Show Labels</label>
                </td>
                <td><div class="Spacer" style="width: 10px;"></div></td>
                <td class="NoWrap"><label for="markerKindString">Marker Kind:</label></td>
                <td><div class="Spacer" style="width: 5px;"></div></td>
                <td style="width: 100%;">
                    @Html.DropDownList("markerKindString", ChartDemoHelper.GetMarkerKinds(), new { style = "width:130px" })
                </td>
                <td class="NoWrap"><label for="diagramStyle">Diagram Type:</label></td>
                <td><div class="Spacer" style="width: 7px;"></div></td>
                <td>
                    @Html.DropDownList("diagramStyle", ChartDemoHelper.GetRadarDiagramTypes(), new { style = "width:100px;" })
                </td>
            </tr>
            <tr>
                <td><div class="Spacer" style="width: 100%; height: 5px;"></div></td>
            </tr>
            <tr>
                <td></td>
                <td class="NoWrap"></td>
                <td><div class="Spacer" style="width: 10px;"></div></td>
                <td class="NoWrap"><label for="markerSize">Marker Size:</label></td>
                <td><div class="Spacer" style="width: 5px;"></div></td>
                <td style="width: 100%;">
                    @Html.DropDownList("markerSize", ChartDemoHelper.GetMarkerSize("8"), new { style = "width:130px;" })
                </td>
                <td class="NoWrap"><label for="polarFunction">Function Type:</label></td>
                <td><div class="Spacer" style="width: 7px;"></div></td>
                <td>
                    @Html.DropDownList("polarFunction", ChartDemoHelper.GetPolarFunctionsForRadarCharts(), new { style = "width:100px" })
                </td>
                <td><div class="Spacer" style="width: 14px;"></div></td>
                <td><input style="float: right;" type="submit" value="Apply" /></td>
            </tr>
        </table>
    </div>

    @Html.DevExpress().Chart(settings => {
        settings.Name = "chart";
        settings.BorderOptions.Visibility = DefaultBoolean.False;
        settings.Height = 500;
        settings.Width = 920;
    
        settings.Legends.Default(l => {
            l.Visibility = DefaultBoolean.False;
        });
    
        settings.Series.Add(s => {
            s.Name = options.PolarFunction.ToString();
            s.ArgumentScaleType = ScaleType.Numerical;
            s.ArgumentDataMember = "X";
            s.ValueDataMembers[0] = "Y";
            s.ToolTipEnabled = options.ShowLabels ? DefaultBoolean.False : DefaultBoolean.True;
            s.ToolTipPointPattern = "{A}: {V:G2}";
            s.LabelsVisibility = options.ShowLabels ? DefaultBoolean.True : DefaultBoolean.False;
            s.Views().PolarPointSeriesView(v => {
                v.PointMarkerOptions.Size = options.MarkerSize;
                v.PointMarkerOptions.Kind = (MarkerKind)Enum.Parse(typeof(MarkerKind), options.MarkerKindString);
                if (v.PointMarkerOptions.Kind == MarkerKind.Star)
                    v.PointMarkerOptions.StarPointCount = options.StarPointCount;
                v.SeriesLabel(l => {
                    l.ResolveOverlappingMode = ResolveOverlappingMode.HideOverlapped;
                    l.TextPattern = "{V:N2}";
                });
            });
        });
    
        settings.PolarDiagram(d => {
            d.DrawingStyle = options.DiagramStyle;
        });
    }).Bind(Model).GetHtml()
}

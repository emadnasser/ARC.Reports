@using (Html.BeginForm()) {
    ChartSeriesBindingDemoOptions options = (ChartSeriesBindingDemoOptions)ViewData[ChartDemoHelper.OptionsKey];
    <div class="chartOptionsPanel" style="height:auto;">
        <table style="width: 100%;">
            <tr>
                <td>
                    @Html.CheckBox("showLabels", options.ShowLabels)
                </td>
                <td><div class="Spacer" style="width: 5px;"></div></td>
                <td class="NoWrap">
                    <label for="showLabels">Show Labels</label>
                </td>
                <td><div class="Spacer" style="width: 160px;"></div></td>
                <td class="NoWrap"><label for="category">Filter By Category:</label></td>
                <td><div class="Spacer" style="width: 5px;"></div></td>
                <td>
                    @Html.DropDownList("category", new SelectList(options.Categories, options.Category), new { style = "width:110px" })
                </td>
                <td><div class="Spacer" style="width: 10px;"></div></td>
                <td class="NoWrap"><label for="sortingKey">Sort By:</label></td>
                <td><div class="Spacer" style="width: 5px;"></div></td>
                <td>
                    @Html.DropDownList("sortingKey", ChartDemoHelper.GetSortValues(), new { style = "width:80px" })
                </td>
                <td><div class="Spacer" style="width: 10px;"></div></td>
                <td class="NoWrap"><label for="sortingMode">Sort Order:</label></td>
                <td><div class="Spacer" style="width: 5px;"></div></td>
                <td>
                    @Html.DropDownList("sortingMode", typeof(SortingMode), options.SortingMode, new { style = "width:95px" })
                </td>
                <td><div class="Spacer" style="width: 12px;"></div></td>
                <td><input style="float: right;" type="submit" value="Apply" /></td>
            </tr>
        </table>
    </div>
    
    @Html.DevExpress().Chart(settings => {
        settings.Name = "chart";
        settings.Width = 920;
        settings.Height = 500;
        settings.BorderOptions.Visibility = DefaultBoolean.False;
        settings.CrosshairEnabled = options.ShowLabels ? DefaultBoolean.False : DefaultBoolean.True;
        
        settings.Legends.Default(l => {
            l.Visibility = DefaultBoolean.False;
        });
    
        settings.Series.Add(ser => {
            ser.Name = "Products";
            ser.SeriesPointsSortingKey = options.SortingKey;
            ser.SeriesPointsSorting = options.SortingMode;
            ser.SetDataMembers("ProductName", "UnitPrice");
            ser.LabelsVisibility = options.ShowLabels ? DefaultBoolean.True : DefaultBoolean.False;
        });       
    
        settings.XYDiagram(d=>{
            d.AxisX.Label.Angle = -30;
            d.AxisY.Title.Visibility = DefaultBoolean.True;
            d.AxisY.Title.Text = "Price";
            d.AxisY.Interlaced = true;
        });
    
        settings.Titles.Add(new ChartTitle() {
            Alignment = StringAlignment.Near,
            Font = new Font("Tahoma", 10),
            Text = "Category: " + options.Category
        });
        settings.Titles.Add(new ChartTitle() {
            Text = "Northwind Traders",
            Font = new Font("Tahoma", 18)
        });
    
        settings.BoundDataChanged = (sender, e) => {
            MVCxChartControl chart = (MVCxChartControl)sender;
            double max = double.NegativeInfinity;
            double min = double.PositiveInfinity;
            double average = 0;
            foreach (SeriesPoint point in chart.Series[0].Points) {
                if (point.Values[0] > max)
                    max = point.Values[0];
                if (point.Values[0] < min)
                    min = point.Values[0];
                average += point.Values[0];
            }
            average /= chart.Series[0].Points.Count;
            chart.Titles[0].Text += "\nMin price: " + min.ToString("0.00");
            chart.Titles[0].Text += "\nMax price: " + max.ToString("0.00");
            chart.Titles[0].Text += "\nAverage price: " + average.ToString("0.00");
        };
    }).Bind(Model).GetHtml()
}
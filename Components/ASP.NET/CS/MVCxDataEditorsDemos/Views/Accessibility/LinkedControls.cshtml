
@section AdditionalResources {
    <script src="@Url.Content("~/Scripts/NotificationBridge.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/css/LinkedControlsStyles.css")" rel="Stylesheet" type="text/css" />

    <script type="text/javascript">
        function OnBeginCallback(s, e) {
            e.customArgs['categories'] = JSON.stringify(lbCategories.GetSelectedValues());
        }
    </script>
}

@section CustomTopAreaHolder {
    @Html.Partial("SkipRepetitiveNavigationLinks")
}

<div role="application" aria-labelledby="par1">
    <p id="par1" class="BottomLargeMargin">
        To try the demo, run a screen reader (<a href="http://www.nvaccess.org/" target="_blank">NVDA</a> or <a href="http://www.freedomscientific.com/Products/Blindness/JAWS" target="_blank">JAWS</a> only),
        and click items within the <b>Categories</b> list box. Corresponding products will appear in the <b>Accepted products</b> grid.
        The screen reader will pronounce any changes in the <b>Categories</b> list box and the <b>Accepted products</b> grid.
    </p>
</div>

@Html.DevExpress().FormLayout(settings => {
    settings.Name = "FormLayout";
    settings.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Top;
    settings.ColCount = 3;
    settings.Styles.LayoutGroup.Cell.CssClass = "layoutItemCell";

    settings.Items.Add(itemSettings => {
        itemSettings.Caption = "Categories";
        itemSettings.SetNestedContent(() => {
            ViewContext.Writer.Write("<div class='dxAIFE' tabindex='0'>main content</div>");
            Html.DevExpress().ListBox(listBox => {
                listBox.Name = "lbCategories";
                listBox.AccessibilityCompliant = true;
                listBox.ControlStyle.CssClass = "lbCategories";
                listBox.Properties.SelectionMode = ListEditSelectionMode.CheckColumn;
                listBox.Properties.ValueType = typeof(int);
                listBox.Properties.ValueField = "CategoryID";
                listBox.Properties.TextField = "CategoryName";
                listBox.Properties.ClientSideEvents.SelectedIndexChanged = "PerformSelection";
            }).BindList(ViewData["Categories"]).GetHtml();
        });
    });
    
    settings.Items.Add(itemSettings => {
        itemSettings.Caption = "Accepted products";
        itemSettings.Width = Unit.Pixel(320);
        itemSettings.SetNestedContent(() => {
            Html.RenderPartial("LinkedControlsPartial");
        });
    });
    
}).GetHtml()

@Html.Partial("AccessibilityValidatorLink")
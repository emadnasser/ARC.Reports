@model UnobtrusiveValidationData

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}
@section AdditionalResources {
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
}
@using (Html.BeginForm("UnobtrusiveValidation", "Common", FormMethod.Post, new { id = "validationForm", @class = "edit_form"})) {
    @Html.DevExpress().FormLayout(settings => {
        settings.Name = "RegistrationFormLayout";
        settings.Items.Add(model => model.Name, CommonDemoHelper.FormLayoutItemSettingsMethod).HelpText = "Cannot be “admin”, cannot contain spaces";
        settings.Items.Add(model => model.Age, CommonDemoHelper.FormLayoutItemSettingsMethod).HelpText = "Must be between 18 and 100";
        settings.Items.Add(model => model.Phone, CommonDemoHelper.FormLayoutItemSettingsMethod).HelpText = "E.g. +1 (789) 555-1234";
        settings.Items.Add(model => model.Email, CommonDemoHelper.FormLayoutItemSettingsMethod).HelpText = "Must be a valid email";
        settings.Items.Add(itemSettings => {
            itemSettings.Caption = string.Empty;
            itemSettings.SetNestedContent(() => {
                ViewContext.Writer.Write("<div class='line'>");
                Html.DevExpress().Button(btnSettings => {
                    btnSettings.Name = "btnUpdate";
                    btnSettings.Text = "Send";
                    btnSettings.ControlStyle.CssClass = "button";
                    btnSettings.UseSubmitBehavior = true;
                }).Render();
                Html.DevExpress().Button(btnSettings => {
                    btnSettings.Name = "btnClear";
                    btnSettings.Text = "Clear";
                    btnSettings.ControlStyle.CssClass = "button";
                    btnSettings.ClientSideEvents.Click = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(); }";
                }).Render();
                ViewContext.Writer.Write("</div>");
            });
        });
    }).GetHtml();    
}

@model ValidationSchedule

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    
    Action<MVCxFormLayoutItem> TextBoxSettingsMethod = i => {
        i.NestedExtension().TextBox(s => {
            s.ShowModelErrors = true;
            s.Properties.ValidationSettings.Display = Display.Dynamic;
            s.Width = Unit.Percentage(100);
        });
    };
    Action<MVCxFormLayoutItem> MemoSettingMethod = i => {
        i.ColSpan = 2;
        i.Height = Unit.Pixel(55);

        i.NestedExtension().Memo(s => {
            s.Properties.Rows = 2;
            s.Width = Unit.Percentage(100);
            s.Height = Unit.Percentage(100);
        });
    };
    Action<MVCxFormLayoutItem> DateTimeSettingsMethod = i => {
        i.NestedExtension().DateEdit(s => {
            s.ShowModelErrors = true;
            s.Properties.ValidationSettings.Display = Display.Dynamic;
            s.Width = Unit.Percentage(100);
        });
    };
    Action<MVCxFormLayoutItem> SpinEditSettingsMethod = i => {
        i.NestedExtension().SpinEdit(s => {
            s.ShowModelErrors = true;
            s.Properties.DisplayFormatString = "{0:C}";
            s.Properties.ValidationSettings.Display = Display.Dynamic;
            s.Width = Unit.Percentage(100);
        });
    };
}
@using (Html.BeginForm()) {
    @Html.DevExpress().FormLayout(settings => {
        settings.Name = "Schedule";
        settings.Width = Unit.Percentage(100);
        settings.ColCount = 2;
    
        settings.Items.Add(m => m.Subject, i => {
            i.ColSpan = 2;
            TextBoxSettingsMethod(i);
        });
        settings.Items.Add(m => m.Location, TextBoxSettingsMethod);
        settings.Items.Add(m => m.Price, SpinEditSettingsMethod);

        settings.Items.Add(m => m.StartTime, DateTimeSettingsMethod);
        settings.Items.Add(m => m.EndTime, DateTimeSettingsMethod);
    
        settings.Items.Add(m => m.Description, MemoSettingMethod);
        settings.Items.Add(m => m.ContactInfo, MemoSettingMethod);
    
        settings.Items.Add(i => {
            i.ColSpan = 2;
            i.ShowCaption = DefaultBoolean.False;
        }).SetNestedContent(() => {
            Html.DevExpress().AppointmentRecurrenceForm(ViewBag.AppointmentRecurrenceFormSettings).Render();
        });
    
        settings.Items.Add(i => {
            i.ColSpan = 2;
            i.ShowCaption = DefaultBoolean.False;
            i.HorizontalAlign = FormLayoutHorizontalAlign.Center;
            i.ParentContainerStyle.Paddings.PaddingTop = Unit.Pixel(7);
        }).SetNestedContent(() => {
            ViewContext.Writer.Write("<div style=\"width:400px; text-align:center\">");
            Html.DevExpress().Button(btnSettings => {
                btnSettings.Name = "Apply";
                btnSettings.Text = "Ok";
                btnSettings.Width = Unit.Pixel(91);
                btnSettings.ClientSideEvents.Click = "OnAppointmentFormSave";
            }).Render();
            Html.DevExpress().Button(btnSettings => {
                btnSettings.Name = "Cancel";
                btnSettings.Text = "Cancel";
                btnSettings.Width = Unit.Pixel(91);
                btnSettings.Style[HtmlTextWriterStyle.Margin] = "0 10px";
                btnSettings.ClientSideEvents.Click = "OnAppointmentFormCancel";
            }).Render();
            Html.DevExpress().Button(btnSettings => {
                btnSettings.Name = "Delete";
                btnSettings.Text = "Delete";
                btnSettings.Width = Unit.Pixel(91);
                settings.Enabled = ViewBag.DeleteButtonEnabled;
                btnSettings.ClientSideEvents.Click = "OnAppointmentFormDelete";
            }).Render();
            ViewContext.Writer.Write("</div>");
        });
    
        settings.Items.Add(i => {
            i.ColSpan = 2;
            i.ShowCaption = DefaultBoolean.False;
        }).SetNestedContent(() => {
            Html.DevExpress().SchedulerStatusInfo(siSettings => {
                siSettings.Name = "schedulerStatusInfo";
                siSettings.Priority = 1;
                siSettings.SchedulerName = "scheduler";
            }).Render();
        });
    }).GetHtml()
}
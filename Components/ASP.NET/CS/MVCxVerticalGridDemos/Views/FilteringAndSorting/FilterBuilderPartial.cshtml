@{
    List<string> columnsToRemove = new List<string>() { 
        "CategoryID", 
        "ProductID", 
        "SupplierID", 
        "Supplier.SupplierID", 
        "Supplier.HomePage", 
        "Category.CategoryID", 
        "EAN13" 
    };
}
@Html.DevExpress().VerticalGrid(settings =>
{
    settings.Name = "VerticalGrid";
    settings.CallbackRouteValues = new { Controller = "FilteringAndSorting", Action = "FilterBuilderPartial" };
    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Visible;
    settings.Width = Unit.Percentage(100);
    settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
    settings.Settings.RecordWidth = 250;
    settings.Settings.ShowCategoryIndents = false;

    settings.Rows.AddCategory(c => {
        c.Caption = "Product Info";
        c.Rows.Add("ProductName");
        c.Rows.Add("Category.CategoryName");
        c.Rows.Add(r => {
            r.FieldName = "Category.Picture";
            r.Caption = "Category";
            r.Settings.ShowInFilterControl = DefaultBoolean.False;
            r.RecordStyle.HorizontalAlign = HorizontalAlign.Center;
            r.EditorProperties().BinaryImage(p => {
                p.ImageWidth = 240;
                p.ImageHeight = 150;
                p.ToolTipField = "Category.CategoryName";
            });
        });
        c.Rows.Add("UnitPrice", MVCxVerticalGridRowType.SpinEdit).PropertiesEdit.DisplayFormatString = "c";
        c.Rows.Add("UnitsInStock");
        c.Rows.Add(r => {
            r.FieldName = "Total";
            r.RowType = MVCxVerticalGridRowType.SpinEdit;
            r.UnboundType = UnboundColumnType.Decimal;
            r.UnboundExpression = "UnitsInStock*UnitPrice";
            r.PropertiesEdit.DisplayFormatString = "c";
        });
    });

    settings.Rows.AddCategory(c => {
        c.Caption = "Supplier Info";
        c.Rows.Add("Supplier.CompanyName");
        c.Rows.Add("Supplier.ContactName");
    });

    settings.SettingsFilterControl.ViewMode = FilterBuilderDemoHelper.Options.EnableTextTab ? FilterControlViewMode.VisualAndText : FilterControlViewMode.Visual;
    settings.SettingsFilterControl.AllowHierarchicalColumns = FilterBuilderDemoHelper.Options.AllowHierarchicalColumns;
    settings.SettingsFilterControl.ShowAllDataSourceColumns = FilterBuilderDemoHelper.Options.ShowAllDataSourceColumns;
    settings.SettingsFilterControl.MaxHierarchyDepth = 1;

    settings.FilterControlColumnsCreated = (sender, e) => {
        foreach(string col in columnsToRemove)
            e.Columns.Remove(col);
    };

    settings.PreRender = (sender, e) =>
    {
        MVCxVerticalGrid grid = sender as MVCxVerticalGrid;
        if(grid != null)
            grid.FilterExpression = "UnitsInStock > 40";
    };
}).Bind(Model).GetHtml()
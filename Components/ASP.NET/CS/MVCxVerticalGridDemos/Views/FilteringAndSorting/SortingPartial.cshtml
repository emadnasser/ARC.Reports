@Html.DevExpress().VerticalGrid( settings => {
    settings.Name = "VerticalGrid";
    settings.CallbackRouteValues = new { Controller = "FilteringAndSorting", Action = "SortingPartial" };
    settings.Width = Unit.Percentage(100);
    
    settings.Settings.ShowCategoryIndents = false;
    settings.Settings.HeaderAreaWidth = 150;
    settings.Settings.RecordWidth = 200;
    settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;

    settings.Rows.Add(r => {
        r.FieldName = "PhotoUrl";
        r.Caption = "Photo";
        r.EditorProperties().Image(p => p.ImageHeight = 180);
    });

    settings.Rows.Add("Brand").RecordStyle.HorizontalAlign = HorizontalAlign.Center;
    settings.Rows.Add("Model").RecordStyle.HorizontalAlign = HorizontalAlign.Center;
    
    settings.Rows.AddCategory(c => {
        c.Caption = "Pricing";
        c.Rows.Add("Price").PropertiesEdit.DisplayFormatString = "c";
        c.Rows.Add(r => {
            r.FieldName = "Discount";
            r.SortOrder = ColumnSortOrder.Descending;
            r.RecordStyle.ForeColor = Color.Red;
            r.PropertiesEdit.DisplayFormatString = "{0}%";
        });
        c.Rows.Add(r => {
            r.FieldName = "Total";
            r.UnboundType = UnboundColumnType.Decimal;
            r.UnboundExpression = "[Price]- [Price] * [Discount] / 100";
            r.RecordStyle.Font.Bold = true;
            r.PropertiesEdit.DisplayFormatString = "c";
        });
    });

    settings.Rows.AddCategory(c => {
        c.Caption = "Specifications";
        c.Rows.Add("Sensitivity", "Sensitivity, dB");
        c.Rows.Add("Power", "Power, MW");
        c.Rows.Add("Wireless", MVCxVerticalGridRowType.CheckBox);
    });

}).Bind(Model).GetHtml()
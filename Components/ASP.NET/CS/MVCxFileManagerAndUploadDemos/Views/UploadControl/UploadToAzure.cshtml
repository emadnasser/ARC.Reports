@model DevExpress.Web.Demos.AzureConnectionInfo

@if(Model != null) {
    <div>
        <script type="text/javascript">
            function onFileUploadComplete(e) {
                if(e.callbackData) {
                    var fileData = e.callbackData.split('|');
                    var fileName = fileData[0],
                        fileUrl = fileData[1],
                        fileSize = fileData[2];
                    DXUploadedFilesContainer.AddFile(fileName, fileUrl, fileSize);
                }
            }
        </script>
        @using(Html.BeginForm("UploadToAzure", "UploadControl", FormMethod.Post, new { @class = "cloud" })) {
            <div class="uploadContainer">
                @Html.DevExpress().UploadControl(
                    settings => {
                        settings.Name = "ucAzureUploader";
                        settings.CallbackRouteValues = new { Controller = "UploadControl", Action = "AzureUpload" };

                        settings.UploadStorage = UploadControlUploadStorage.Azure;
                        settings.AzureSettings.AccountName = Model.AccountName;
                        settings.AzureSettings.ContainerName = Model.ContainerName;
                        
                        settings.Width = Unit.Pixel(320);
                        settings.ShowProgressPanel = true;
                        settings.ShowUploadButton = true;
                        settings.UploadMode = UploadControlUploadMode.Auto;
                        settings.AdvancedModeSettings.EnableMultiSelect = true;
                        settings.AdvancedModeSettings.EnableFileList = true;
                        settings.AdvancedModeSettings.EnableDragAndDrop = true;
                        settings.NullText = "Click here to browse files...";

                        settings.ValidationSettings.Assign(UploadControlDemosHelper.UploadValidationSettings);

                        settings.ClientSideEvents.FilesUploadStart = "function(s,e) { DXUploadedFilesContainer.Clear(); }";
                        settings.ClientSideEvents.FileUploadComplete = "function(s,e) { onFileUploadComplete(e); }";
                    }).GetHtml()

                <br /><br />
                @Html.DevExpress().Label(
                    settings => {
                        settings.Name = "AllowedFileExtensionsLabel";
                        settings.Text = "Allowed file extensions: .jpg, .jpeg, .gif, .png.";
                        settings.ControlStyle.Font.Size = FontUnit.Point(8);
                    }).GetHtml()
                <br />
                @Html.DevExpress().Label(
                    settings => {
                        settings.Name = "MaxFileSizeLabel";
                        settings.Text = "Maximum file size: 4 MB.";
                        settings.ControlStyle.Font.Size = FontUnit.Point(8);
                    }).GetHtml()
    
            </div>
            <div>
                @Html.Partial("UploadedFilesContainer", true)
            </div>
            <div class="contentFooter">
                <p class="Note">
                    <b>Note</b>: All files uploaded to this demo will be automatically deleted in 5 minutes.
                </p>
            </div>
        }
    </div>
}
else {
    <p>To run the demo locally, register your Azure account using the AccountManager.RegisterAzure() method in the global.asax file 
    and set the AzureSettings.ContainerName property to your container name value. Or you can see this demo online at 
    <a href="http://demos.devexpress.com/MVCxFileManagerAndUploadDemos/UploadControl/UploadToAzure">
    http://demos.devexpress.com/MVCxFileManagerAndUploadDemos/UploadControl/UploadToAzure</a>.</p>
}
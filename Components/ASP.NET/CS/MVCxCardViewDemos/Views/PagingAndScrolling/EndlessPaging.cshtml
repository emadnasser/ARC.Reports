@model IEnumerable

<script type="text/javascript">
    function PerformCallback(s, e) {
        CardView.PerformCallback();
    }

    function OnCardViewBeginCallback(s, e) {
        e.customArgs["EndlessPagingMode"] = EndlessPagingMode.GetValue();
        e.customArgs["EnableScrolling"] = EnableScrolling.GetValue();
    }
</script>           

@using(Html.BeginForm()) {
    <table class="OptionsTable BottomMargin">
        <tr>
            <td>
                @Html.DevExpress().Label(settings => {
                    settings.Name = "EndlessPagingModeLabel";
                    settings.Text = "Endless paging mode:";
                    settings.AssociatedControlName = "EndlessPagingMode";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().ComboBox(settings => {
                    settings.Name = "EndlessPagingMode";
                    settings.Properties.DataSource = Enum.GetValues(typeof(CardViewEndlessPagingMode));
                    settings.SelectedIndex = 0;
                    settings.Properties.ClientSideEvents.ValueChanged = "PerformCallback";
                }).BindList(Enum.GetValues(typeof(CardViewEndlessPagingMode))).Bind(PagingAndScrollingHelper.Options.EndlessPagingMode.ToString()).GetHtml()
            </td>
        </tr>
        <tr>
            <td>
                @Html.DevExpress().Label(settings => {
                   settings.Name = "EnableScrollingLabel";
                   settings.Text = "Enable scrolling:";
                   settings.AssociatedControlName = "EnableScrolling";
                }).GetHtml()
            </td>
            <td>
                @Html.DevExpress().CheckBox(settings => {
                    settings.Name = "EnableScrolling";
                    settings.Checked = PagingAndScrollingHelper.Options.EnableScrolling;
                    settings.Properties.ClientSideEvents.CheckedChanged = "PerformCallback";
                }).GetHtml()
            </td>
        </tr>
    </table>

    @Html.Partial("EndlessPagingPartial", Model)
}
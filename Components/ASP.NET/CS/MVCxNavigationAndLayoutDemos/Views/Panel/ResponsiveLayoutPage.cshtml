@model IEnumerable
@{ Layout = null; }
<!DOCTYPE html>
<html>
<head>
	<meta name="viewport" content="width=device-width, user-scalable=no, maximum-scale=1.0, minimum-scale=1.0" />
    <title>Responsive Layout - ASP.NET MVC Panel Extension</title>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Panel/ResponsiveLayout.css")" />    
    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionType = ExtensionType.Panel },
        new StyleSheet { ExtensionType = ExtensionType.ComboBox },
        new StyleSheet { ExtensionType = ExtensionType.GridView }        
    )
    <script src="@Url.Content("~/Scripts/jquery-1.11.3.min.js")" type="text/javascript"></script>
    @Html.DevExpress().GetScripts(
        new Script { ExtensionType = ExtensionType.Panel },
        new Script { ExtensionType = ExtensionType.ComboBox },
        new Script { ExtensionType = ExtensionType.GridView }        
    )
    <script type="text/javascript">
        function OnListBoxValueChanged(){
            if (!sampleGrid.InCallback())
                sampleGrid.PerformCallback();
        }
        function OnGridViewBeginCallback(s, e) {
            e.customArgs["employeeID"] = sampleListBox.GetValue();
        }
        function UpdateHeaderMenuOrientation() {
            var orientation = topPanel.IsExpandable() ? 'Vertical' : 'Horizontal';
            if(orientation !== headerMenu.GetOrientation())
                headerMenu.SetOrientation(orientation);
        }
        function UpdateGridHeight(){
            sampleGrid.SetHeight(0);
            var containerHeight = ASPx.GetDocumentHeight();
            if(document.body.scrollHeight > containerHeight)
                containerHeight = document.body.scrollHeight;
            sampleGrid.SetHeight(containerHeight - topPanel.GetHeight() - employeeSelectorPanel.GetHeight());
        }
    </script>
</head>
<body>
    @Html.DevExpress().Panel(settings => {
        settings.Name = "topPanel";
        settings.FixedPosition = PanelFixedPosition.WindowTop;
        settings.Collapsible = true;
        settings.SettingsAdaptivity.CollapseAtWindowInnerWidth = 580;
        settings.Styles.ExpandedPanel.CssClass = "expandedPanel";
        settings.SetContent(() => {
            ViewContext.Writer.Write("<div class='title'>Orders</div>");
            Html.RenderPartial("ResponsiveLayoutMainMenuPartial");                     
        });
        settings.SetExpandBarTemplateContent(c => {
            ViewContext.Writer.Write("<div class='title'>Orders</div>");
        });
    }).GetHtml()
    @Html.DevExpress().Panel(settings => {
        settings.Name = "LeftPanel";
        settings.FixedPosition = PanelFixedPosition.WindowLeft;
        settings.Collapsible = true;
        settings.SettingsAdaptivity.CollapseAtWindowInnerWidth = 900;
        settings.SetContent(() => {
            Html.RenderPartial("ResponsiveLayoutNavBarPartial");
        });
    }).GetHtml()
    @Html.DevExpress().Panel(settings => {
        settings.Name = "employeeSelectorPanel";
        settings.EnableClientSideAPI = true;
        settings.Styles.Panel.Paddings.Padding = Unit.Pixel(8);
        settings.SetContent(() => {
            Html.DevExpress().ComboBox(comboBoxSettings => {
                comboBoxSettings.Name = "sampleListBox";
                comboBoxSettings.Properties.Caption = "Employee";
                comboBoxSettings.Properties.TextField = "Name";
                comboBoxSettings.Properties.ValueField = "ID";
                comboBoxSettings.Properties.ValueType = typeof(int);
                comboBoxSettings.SelectedIndex = 0;
                comboBoxSettings.Height = Unit.Percentage(100);
                comboBoxSettings.Properties.ClientSideEvents.ValueChanged = "OnListBoxValueChanged";
            }).BindList(Model).Render();
        });
    }).GetHtml()
    @Html.Action("ResponsiveLayoutGridPartial")    
    <script type="text/javascript">
        ASPxClientControl.GetControlCollection().ControlsInitialized.AddHandler(function(s, e) {
            UpdateHeaderMenuOrientation();
            UpdateGridHeight();
        });
        ASPxClientControl.GetControlCollection().BrowserWindowResized.AddHandler(function(s, e) {
            UpdateHeaderMenuOrientation();
            UpdateGridHeight();
        });
    </script>
</body>
</html>

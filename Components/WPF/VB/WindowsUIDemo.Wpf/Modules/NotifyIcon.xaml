<local:WindowsUIDemoModule x:Class="WindowsUIDemo.NotifyIcon"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
        xmlns:dxdb="http://schemas.devexpress.com/winfx/2008/xaml/demobase"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
        xmlns:dxre="http://schemas.devexpress.com/winfx/2008/xaml/richedit"
        xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
        xmlns:local="clr-namespace:WindowsUIDemo"
        xmlns:helpers="clr-namespace:DevExpress.Xpf.DemoBase.Helpers;assembly=DevExpress.Xpf.DemoBase.v16.2"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        x:Name="root"
        xmlns:dxmvvmi="clr-namespace:DevExpress.Mvvm.UI.Native"
        DataContext="{dxmvvm:ViewModelSource Type={x:Type local:NotifyIconViewModel}}">
    <local:WindowsUIDemoModule.Resources>
        <dxmvvm:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style TargetType="Button" x:Key="ButtonStyle">
            <Setter Property="Background" Value="#FFF7941E"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="40,8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF3D3D3D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </local:WindowsUIDemoModule.Resources>
    <dxmvvm:Interaction.Behaviors>
        <dx:DXMessageBoxService/>
        <dx:NotifyIconService LeftClickCommand="{Binding DoIconLeftActionCommand}" Icon="/WindowsUIDemo;component/Images/demoicon.ico">
            <dx:NotifyIconService.States>
                <dx:NotifyIconState  Name="warningState" Icon="/WindowsUIDemo;component/Images/warning.ico"/>
                <dx:NotifyIconState  Name="aboutState" Icon="/WindowsUIDemo;component/Images/about.ico"/>
            </dx:NotifyIconService.States>
            <dxb:PopupMenu>
                <dxb:BarButtonItem Content="Apply" Glyph="{dx:DXImage Image=Apply_16x16.png}" Command="{Binding PopupButtonClickCommand}" CommandParameter="Apply"/>
                <dxb:BarButtonItem Content="Copy" Glyph="{dx:DXImage Image=Copy_16x16.png}" Command="{Binding PopupButtonClickCommand}" CommandParameter="Copy"/>
                <dxb:BarButtonItem Content="Delete" Glyph="{dx:DXImage Image=Delete_16x16.png}" Command="{Binding PopupButtonClickCommand}" CommandParameter="Delete"/>
            </dxb:PopupMenu>
        </dx:NotifyIconService>

    </dxmvvm:Interaction.Behaviors>
    <dxdb:DemoModuleControl SupressGroupFramePaddingInOptions="False" BorderThickness="0" AboutPanelMargin="0,1,0,0">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="380"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Column="0" Margin="0,0,20,0">
                <dx:GroupFrame Header="Action">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Button Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Set 'Warning' state" Command="{Binding SetStatusIconCommand}" CommandParameter="warningState" Style="{StaticResource ButtonStyle}"/>
                        <Button Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Set 'About' state" Command="{Binding SetStatusIconCommand}" CommandParameter="aboutState" Style="{StaticResource ButtonStyle}"/>
                        <Button Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Reset state" Command="{Binding ResetStatusIconCommand}" Style="{StaticResource ButtonStyle}"/>
                    </Grid>
                </dx:GroupFrame>

            </Grid>
            <Grid Grid.Column="1" Margin="0,0,0,0">
                <dx:GroupFrame Header="Events log">
                    <dxe:ListBoxEdit ItemsSource="{Binding EventsLog}" IsReadOnly="True" Focusable="False" ShowBorder="False"/>
                </dx:GroupFrame>
            </Grid>
        </Grid>
    </dxdb:DemoModuleControl>
</local:WindowsUIDemoModule>
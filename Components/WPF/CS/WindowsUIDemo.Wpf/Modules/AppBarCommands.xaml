<local:WindowsUIDemoModule x:Class="WindowsUIDemo.AppBarCommands"
                           xmlns:local="clr-namespace:WindowsUIDemo"
                           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                           xmlns:dxdb="http://schemas.devexpress.com/winfx/2008/xaml/demobase"
                           xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                           xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
                           xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                           xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui"
                           xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm">
    <dxdb:DemoModuleControl SupressGroupFramePaddingInOptions="False" DataContext="{dxmvvm:ViewModelSource local:PhotoCollection}">
        <Grid Background="#55000000">
            <Grid.Resources>
                <Style TargetType="dxwui:AppBarButton">
                    <Setter Property="AllowGlyphTheming" Value="True" />
                    <Setter Property="GlyphHeight" Value="24" />
                </Style>
                <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="Transparent">
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Padding}"
                                        Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                        CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" />
                    </Grid>
                </ControlTemplate>
                <Style TargetType="ScrollViewer">
                    <Setter Property="Template" Value="{StaticResource ScrollViewerControlTemplate}" />
                </Style>
            </Grid.Resources>
            <dxwui:FlipView ItemsSource="{Binding Photos}" SelectedItem="{Binding SelectedItem, Mode=TwoWay}" x:Name="imageViewer1" IsAnimationEnabled="True" IsManipulationEnabled="True">
                <dxwui:FlipView.ItemTemplate>
                    <DataTemplate>
                        <local:ImageViewer ImageSource="{Binding Source}" Rotation="{Binding Rotation, Mode=TwoWay}" Scale="{Binding Scale, Mode=TwoWay}" Flip="{Binding Flip, Mode=TwoWay}"/>
                    </DataTemplate>
                </dxwui:FlipView.ItemTemplate>
            </dxwui:FlipView>
            <dxwui:AppBar x:Name="appBar" HideMode="{Binding SelectedItem.Id, ElementName=hideModeListBox}"
                          IsOpen="{Binding IsChecked, ElementName=isOpenCheckEdit, Mode=TwoWay}">
                <dxwui:AppBarButton Label="Zoom in" Command="{Binding ZoomInCommand}" Glyph="{dx:DXImageGrayscale Image=ZoomIn_32x32.png}" />
                <dxwui:AppBarButton Label="Zoom out" Command="{Binding ZoomOutCommand}" Glyph="{dx:DXImageGrayscale Image=ZoomOut_32x32.png}" />
                <dxwui:AppBarSeparator />
                <dxwui:AppBarButton Label="Actual Size" Command="{Binding ResetScaleCommand}" Glyph="{dx:DXImageGrayscale Image=Zoom_32x32.png}" />
                <dxwui:AppBarButton Label="Rotate" HorizontalAlignment="Right" Glyph="{dx:DXImage Image=DrillDown_32x32.png}" >
                    <dxwui:AppBarButton.Flyout>
                        <dxwui:MenuFlyout ShowIndicator="True">
                            <dxwui:MenuFlyoutItem Content="90° clockwise" Command="{Binding RotateClockwiseCommand}" />
                            <dxwui:MenuFlyoutItem Content="90° counter clockwise" Command="{Binding RotateCounterclockwiseCommand}" />
                            <dxwui:MenuFlyoutItem Content="180°" Command="{Binding Rotate180Command}" />
                            <dxwui:MenuFlyoutSeparator />
                            <dxwui:MenuFlyoutItem Content="Reset" Command="{Binding RotateResetCommand}" />
                        </dxwui:MenuFlyout>
                    </dxwui:AppBarButton.Flyout>
                </dxwui:AppBarButton>
                <dxwui:AppBarButton Label="Flip" Command="{Binding FlipCommand}" HorizontalAlignment="Right" Glyph="{dx:DXImageGrayscale Image=Stretch_32x32.png}" />
                <dxwui:AppBarSeparator HorizontalAlignment="Right" />
                <dxwui:AppBarButton Label="Print" Command="{Binding PrintCommand}" HorizontalAlignment="Right" Glyph="{dx:DXImageGrayscale Image=Print_32x32.png}" />
            </dxwui:AppBar>
        </Grid>
        <dxdb:DemoModuleControl.OptionsContent>
            <dxlc:LayoutControl Orientation="Vertical">
                <dxlc:LayoutItem>
                    <dx:GroupFrame Header="Hide Mode">
                        <dxe:ListBoxEdit Background="{x:Null}" Name="hideModeListBox" DisplayMember="Name" ShowBorder="False" SelectedIndex="0">
                            <dxe:ListBoxEdit.StyleSettings>
                                <dxe:RadioListBoxEditStyleSettings/>
                            </dxe:ListBoxEdit.StyleSettings>
                            <dxmvvm:Interaction.Behaviors>
                                <dxmvvm:EnumItemsSourceBehavior EnumType="dxwui:AppBarHideMode" />
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ListBoxEdit>
                    </dx:GroupFrame>
                </dxlc:LayoutItem>
                <dxlc:LayoutItem>
                    <dxe:CheckEdit x:Name="isOpenCheckEdit" IsChecked="True" Content="IsOpen" />
                </dxlc:LayoutItem>
                <dxlc:LayoutItem>
                    <dxe:CheckEdit Content="IsCompact" IsChecked="{Binding IsCompact, ElementName=appBar, Mode=TwoWay}" />
                </dxlc:LayoutItem>
            </dxlc:LayoutControl>
        </dxdb:DemoModuleControl.OptionsContent>
    </dxdb:DemoModuleControl>
</local:WindowsUIDemoModule>
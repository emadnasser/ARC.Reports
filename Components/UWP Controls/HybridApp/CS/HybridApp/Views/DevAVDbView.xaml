<Page
    x:Class="HybridApp.DevAVDbView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:HybridApp"
    xmlns:Common="using:HybridApp.Common"
    xmlns:Views="using:HybridApp.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:Core="using:DevExpress.Core"
    xmlns:Grid="using:DevExpress.UI.Xaml.Grid"
    xmlns:Controls="using:DevExpress.UI.Xaml.Controls"
    xmlns:Layout="using:DevExpress.UI.Xaml.Layout"
    xmlns:LayoutInternal="using:DevExpress.UI.Xaml.Layout.Internal"
    xmlns:dxmvvmui="using:DevExpress.Mvvm.UI"
    xmlns:dxmvvmi="using:DevExpress.Mvvm.UI.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Page.Resources>
        <Style TargetType="Layout:ExpandContainer">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
        </Style>
    </Page.Resources>
    <Page.DataContext>
        <local:DevAVDbViewModel/>
    </Page.DataContext>
    <dxmvvmi:Interaction.Behaviors>
        <dxmvvmui:EventToCommand EventName="Loaded" Command="{Binding LoadedCommand}"/>
        <dxmvvmui:MessageBoxService/>
        <dxmvvmui:DialogService/>
        <Common:WaitIndicatorService x:Name="WaitIndicatorService"/>
    </dxmvvmi:Interaction.Behaviors>
    <Grid>
        <Views:SplashScreen Grid.Row="1" Visibility="{Binding ElementName=WaitIndicatorService, Path=IsInitialActive, Converter={StaticResource BoolToVisibilityConverter}}"/>
        <Grid Background="White" x:Name="mainGrid" Visibility="{Binding ElementName=WaitIndicatorService, Path=IsInitialActive, Converter={StaticResource InverseBoolToVisibilityConverter}}">
            <Grid.Resources>
                <CollectionViewSource x:Key="GroupedEntities" IsSourceGrouped="True" Source="{Binding GroupedEntities}"/>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Common:HybridTitleBarControl Background="#FF3F3F3F">
                <Common:HybridTitleBarControl.TitleLogo>
                    <Image Source="ms-appx:/Resources/Demo-Logo.png" Margin="9,3"/>
                </Common:HybridTitleBarControl.TitleLogo>
                <Common:HybridTitleBarControl.TitleBar>
                    <Grid Height="32" Background="#FF3F3F3F"/>
                </Common:HybridTitleBarControl.TitleBar>
                <Common:HybridTitleBarControl.TitleMenu>
                    <Layout:TileBar
                        ItemsSource="{Binding Source={StaticResource GroupedEntities}}"
                        SelectedItem="{Binding SelectedEntity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Background="#E8E8E8"
                        VerticalAlignment="Top"
                        Height="145"
                        Padding="0,27"
                        Margin="0">
                        <Layout:TileBar.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.Panel>
                                    <ItemsPanelTemplate>
                                        <LayoutInternal:TileBarItemsPanel/>
                                    </ItemsPanelTemplate>
                                </GroupStyle.Panel>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Key}" Margin="6,0,0,4" FontSize="14"/>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </Layout:TileBar.GroupStyle>
                        <Layout:TileBar.ItemContainerStyle>
                            <Style TargetType="Layout:TileBarItem">
                                <Setter Property="Core:StyleHelper.BindableSetters">
                                    <Setter.Value>
                                        <Core:BindableSetterCollection>
                                            <Core:BindableSetter Property="IconSource" Binding="{Binding Title, Converter={StaticResource IconNameToDataConverter}}" OverrideLocalValue="True"/>
                                            <Core:BindableSetter Property="Content" Binding="{Binding Title}" OverrideLocalValue="True"/>
                                            <Core:BindableSetter Property="Background" Binding="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"/>
                                            <Core:BindableSetter Property="FlyoutContent" Binding="{Binding}"/>
                                            <Core:BindableSetter Property="ShowFlyoutButton" Binding="{Binding FilterTreeViewModel.CustomFilters, Converter={StaticResource ObjectToBooleanConverter}}"/>
                                        </Core:BindableSetterCollection>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="IconFill" Value="White"/>
                                <Setter Property="IconWidth" Value="24"/>
                                <Setter Property="IconHeight" Value="24"/>
                                <Setter Property="IconStretch" Value="Uniform"/>
                                <Setter Property="HorizontalTileGlyphAlignment" Value="Left"/>
                                <Setter Property="VerticalTileGlyphAlignment" Value="Top"/>
                                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                                <Setter Property="Margin" Value="3,0,6,0"/>
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="Width" Value="166" />
                                <Setter Property="FlyoutContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Layout:TileBar Name="flyoutTileBar" ItemsSource="{Binding FilterTreeViewModel.CustomFilters}" SelectedItem="{Binding FilterTreeViewModel.CustomFilters.SelectedItem, Mode=TwoWay}" Padding="15">
                                                <Layout:TileBar.ItemContainerStyle>
                                                    <Style TargetType="Layout:TileBarItem">
                                                        <Setter Property="Height" Value="40"/>
                                                        <Setter Property="MinWidth" Value="150"/>
                                                        <Setter Property="ShowFlyoutButton" Value="False"/>
                                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                        <Setter Property="Background" Value="White"/>
                                                        <Setter Property="Foreground" Value="Black"/>
                                                        <Setter Property="FontSize" Value="12"/>
                                                        <Setter Property="Margin" Value="3,9"/>
                                                        <Setter Property="Padding" Value="10,5"/>
                                                        <Setter Property="Core:StyleHelper.BindableSetters">
                                                            <Setter.Value>
                                                                <Core:BindableSetterCollection>
                                                                    <Core:BindableSetter Property="Command" Binding="{Binding DataContext.OnSelectedCommand, ElementName=flyoutTileBar}"/>
                                                                    <Core:BindableSetter Property="Content" Binding="{Binding Name}" OverrideLocalValue="True"/>
                                                                </Core:BindableSetterCollection>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Layout:TileBar.ItemContainerStyle>
                                            </Layout:TileBar>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Layout:TileBar.ItemContainerStyle>
                    </Layout:TileBar>
                </Common:HybridTitleBarControl.TitleMenu>
            </Common:HybridTitleBarControl>
            <Layout:DXFrame Name="rootFrame" Grid.Row="1" SourcePageType="{Binding SourcePageType, Mode=TwoWay}" HideBackButton="True">
                <dxmvvmi:Interaction.Behaviors>
                    <dxmvvmui:NavigationService/>
                </dxmvvmi:Interaction.Behaviors>
            </Layout:DXFrame>
            <Views:ModuleLoadingScreen Grid.Row="1" Visibility="{Binding ElementName=WaitIndicatorService, Path=IsActive, Converter={StaticResource BoolToVisibilityConverter}}"/>
        </Grid>
    </Grid>
</Page>
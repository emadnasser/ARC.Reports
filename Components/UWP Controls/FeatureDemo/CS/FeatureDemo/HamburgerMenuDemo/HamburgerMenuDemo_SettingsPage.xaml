<Page
    x:Class="HamburgerMenuDemo.HamburgerMenuDemo_SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Layout="using:DevExpress.UI.Xaml.Layout"
    xmlns:local="using:HamburgerMenuDemo"
    xmlns:Common="using:FeatureDemo.Common"
    xmlns:Xaml="using:DevExpress.UI.Xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Page.Resources>
        <Style TargetType="Layout:HyperlinkNavigationButton">
            <Setter Property="Margin" Value="6,0" />
        </Style>
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FlyoutState">
                    <VisualState.StateTriggers>
                        <Layout:HamburgerMenuViewStateAdaptiveTrigger AvailableViewStates="Flyout" RelativeVisual="{x:Bind}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="header.TextIndent" Value="30" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="BodyVisibilityGroup">
                <VisualState x:Name="LargeBodyWidth">
                    <VisualState.StateTriggers>
                        <Xaml:ControlAdaptiveTrigger Control="{Binding ElementName=body}" MinControlWidth="200" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="body.Opacity" Value="1" />
                        <Setter Target="body.IsHitTestVisible" Value="true" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid x:Name="body" IsHitTestVisible="False" Opacity="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <RichTextBlock Margin="20, 9,20,20" IsTextSelectionEnabled="False">
                <RichTextBlock.Blocks>
                    <Paragraph x:Name="header" FontSize="20" LineHeight="28">
                        Use this demo to try the following Hamburger Menu features:
                    </Paragraph>
                </RichTextBlock.Blocks>
            </RichTextBlock>
            <ScrollViewer HorizontalScrollMode="Disabled" VerticalScrollMode="Enabled" VerticalScrollBarVisibility="Auto" Grid.Row="1">
                <RichTextBlock Margin="20, 10,20,20" IsTextSelectionEnabled="False">
                    <RichTextBlock.Blocks>
                        <Paragraph>
                            <Run FontWeight="SemiBold">- Adaptive layout</Run>
                            <Run>- Resize the window to see how the Hamburger Menu automatically adapts its layout. Note that you can disable certain menu states using the 'Allowed States' check list on the right hand side.</Run>
                            <LineBreak />
                            <LineBreak />
                            <Run FontWeight="SemiBold">- Navigation buttons</Run>
                            <Run>- These buttons can be used to invoke custom actions, or automatically navigate to linked pages. Try the 'Inbox', 'Sent' and 'Close Window' buttons.</Run>
                            <LineBreak />
                            <LineBreak />
                            <Run FontWeight="SemiBold">- Radio groups</Run>
                            <Run>- You can combine menu items into a radio group. Try clicking the items in the left bottom corner of the menu.</Run>
                            <LineBreak />
                            <LineBreak />
                            <Run FontWeight="SemiBold">- Check box items</Run>
                            <Run>- Try the check item in the right-bottom corner of the menu.</Run>
                            <LineBreak />
                            <LineBreak />
                            <Run FontWeight="SemiBold">- Hyperlink items</Run>
                            <Run>- Try the 'Additional Information' link, which activates a separate web page.</Run>
                            <LineBreak />
                            <LineBreak />
                            <Run FontWeight="SemiBold">- Submenus</Run>
                            <Run>- Try the Folders menu item, which provides access to its subitems in a flyout, and the so-called Preview section below the button itself.</Run>
                            <LineBreak />
                            <LineBreak />
                            <Run FontWeight="SemiBold">- Hide the menu on an item click</Run>
                            <Run>- Press the 'New Mail' button to see this feature in action.</Run>
                        </Paragraph>
                    </RichTextBlock.Blocks>
                </RichTextBlock>
            </ScrollViewer>
        </Grid>

        <StackPanel Grid.Column="1" BorderBrush="{ThemeResource HamburgerMenuDemoSettingsSeparatorBackground}" BorderThickness="1,0,0,0" Padding="10,10,10,10" Background="{ThemeResource HamburgerMenuDemoSettingsPaneBackground}">
            <TextBlock Text="Settings" Margin="0,0,0,30" FontSize="22" FontFamily="Segoe UI" FontWeight="Light" />
            <TextBox Header="Header" Text="{Binding Header, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="10" />
            <CheckBox Content="Window Title Customization" IsChecked="{Binding AllowCustomizingWindowTitle, Mode=TwoWay}" Margin="0,30,0,0"/>
            <TextBlock Text="Allowed States" Margin="0,30,0,15" />
            <CheckBox Content="Inline" IsChecked="{Binding IsInlineViewStateEnabled, Mode=TwoWay}" FontSize="14" Margin="10,0,0,0"/>
            <CheckBox Content="Overlay" IsChecked="{Binding IsOverlayViewStateEnabled, Mode=TwoWay}" FontSize="14" Margin="10,0,0,0"/>
            <CheckBox Content="Flyout" IsChecked="{Binding IsFlyoutViewStateEnabled, Mode=TwoWay}" FontSize="14" Margin="10,0,0,0"/>

            <StackPanel Margin="0,30,0,0" Orientation="Horizontal">
                <TextBlock Text="Selected Radio Button: " Margin="0,0,0,0" VerticalAlignment="Center" />
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{Binding SelectedRadioButtonGlyph, Mode=OneWay}" Margin="10,2,0,0" VerticalAlignment="Center" Foreground="{ThemeResource HamburgerMenuDemoIconForeground}" />
            </StackPanel>
            <StackPanel Margin="0,30,0,0" Orientation="Horizontal">
                <TextBlock Text="Check Box State: " Margin="0"/>
                <TextBlock Text="{Binding CheckBoxState, Mode=OneWay}" Foreground="{ThemeResource HamburgerMenuDemoIconForeground}" Margin="10,0,0,0" />
            </StackPanel>
        </StackPanel>
    </Grid>
</Page>